### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.AuthenticationResult?alt=Microsoft.Identity.Client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="True"/>&gt;
    description: >-
      Authentication result containing a token for the requested scopes and parameters
                  set in the builder.
  type: method
  uid: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync
  commentId: M:Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync
  name: ExecuteAsync()
  fullName: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync()
  nameWithType: AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync()
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult> ExecuteAsync ();
  - lang: fsharp
    values:
    - value: 'member this.ExecuteAsync : unit -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>'
  - lang: vb
    values:
    - value: Public Function ExecuteAsync () As Task(Of AuthenticationResult)
  monikers:
  - msal-dotnet-latest
  summary: Executes the Token request asynchronously.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.AuthenticationResult?alt=Microsoft.Identity.Client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="True"/>&gt;
    description: >-
      Authentication result containing a token for the requested scopes and parameters
                  set in the builder.
  parameters:
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token. See <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref>
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  fullName: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync(CancellationToken)
  nameWithType: AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync(CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public abstract System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult> ExecuteAsync (System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'abstract member ExecuteAsync : System.Threading.CancellationToken -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>'
  - lang: vb
    values:
    - value: Public MustOverride Function ExecuteAsync (cancellationToken As CancellationToken) As Task(Of AuthenticationResult)
  monikers:
  - msal-dotnet-latest
  summary: >-
    Executes the Token request asynchronously, with a possibility of canceling the

    asynchronous method.
  remarks: <p>Cancellation is not guaranteed, it is best effort. If the operation reaches a point of no return, e.g. tokens are acquired and written to the cache, the task will complete even if cancellation was requested. Do not rely on cancellation tokens for strong consistency.</p>
  metadata: {}
uid: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync*
commentId: Overload:Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync
namespace: Microsoft.Identity.Client
name: ExecuteAsync
fullName: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync
nameWithType: AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.ExecuteAsync
  - Microsoft::Identity::Client::AbstractAcquireTokenParameterBuilder`1::ExecuteAsync
  - Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder.ExecuteAsync
  - ExecuteAsync
  - AbstractAcquireTokenParameterBuilder`1.ExecuteAsync
  - AbstractAcquireTokenParameterBuilder`1::ExecuteAsync
  helpviewer_keywords:
  - AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync method [.NET]
  - ExecuteAsync method [.NET], class AbstractAcquireTokenParameterBuilder<T>
  - AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync() method [.NET]
  - ExecuteAsync() method [.NET], class AbstractAcquireTokenParameterBuilder<T>
  - AbstractAcquireTokenParameterBuilder<T>.ExecuteAsync(CancellationToken) method [.NET]
  - ExecuteAsync(CancellationToken) method [.NET], class AbstractAcquireTokenParameterBuilder<T>
  monikers:
  - msal-dotnet-latest
