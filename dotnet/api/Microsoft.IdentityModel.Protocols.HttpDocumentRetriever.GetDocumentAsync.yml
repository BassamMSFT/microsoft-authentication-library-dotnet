### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
    description: Document as a string
  parameters:
  - namesWithMoniker:
    - value: address
    description: Location of document
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancel
    description: A cancellation token that can be used by other objects or threads to receive notice of cancellation. <xref data-throw-if-not-resolved="true" uid="System.Threading.CancellationToken"></xref>
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  implementsWithMoniker:
  - value: <xref href="Microsoft.IdentityModel.Protocols.IDocumentRetriever.GetDocumentAsync(System.String,System.Threading.CancellationToken)?alt=Microsoft.IdentityModel.Protocols.IDocumentRetriever.GetDocumentAsync(System.String,System.Threading.CancellationToken)&text=GetDocumentAsync(String%2C+CancellationToken)" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(System.String,System.Threading.CancellationToken)
  name: GetDocumentAsync(String, CancellationToken)
  fullName: Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String, CancellationToken)
  nameWithType: HttpDocumentRetriever.GetDocumentAsync(String, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<string> GetDocumentAsync (string address, System.Threading.CancellationToken cancel);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetDocumentAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<string>

        override this.GetDocumentAsync : string * System.Threading.CancellationToken -> System.Threading.Tasks.Task<string>
  - lang: vb
    values:
    - value: Public Function GetDocumentAsync (address As String, cancel As CancellationToken) As Task(Of String)
  monikers:
  - msal-web-dotnet-latest
  summary: Returns a task which contains a string converted from remote document when completed, by using the provided address.
  metadata: {}
uid: Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync*
commentId: Overload:Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync
namespace: Microsoft.IdentityModel.Protocols
name: GetDocumentAsync
fullName: Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync
nameWithType: HttpDocumentRetriever.GetDocumentAsync
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Protocols.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Protocols v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync
  api_location:
  - Microsoft.IdentityModel.Protocols.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync
  - Microsoft::IdentityModel::Protocols::HttpDocumentRetriever::GetDocumentAsync
  - GetDocumentAsync
  - HttpDocumentRetriever.GetDocumentAsync
  - HttpDocumentRetriever::GetDocumentAsync
  helpviewer_keywords:
  - HttpDocumentRetriever.GetDocumentAsync method [.NET]
  - GetDocumentAsync method [.NET], class HttpDocumentRetriever
  - HttpDocumentRetriever.GetDocumentAsync(String, CancellationToken) method [.NET]
  - GetDocumentAsync(String, CancellationToken) method [.NET], class HttpDocumentRetriever
  monikers:
  - msal-web-dotnet-latest
