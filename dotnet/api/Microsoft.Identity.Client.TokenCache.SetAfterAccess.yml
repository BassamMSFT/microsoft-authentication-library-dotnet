### YamlMime:NetMember
type: method
members:
- parameters:
  - namesWithMoniker:
    - value: afterAccess
    description: >-
      Delegate set in order to handle the cache serialization in the case where the <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.TokenCache.HasStateChanged"></xref>
                  member of the cache is <code data-dev-comment-type="c">true</code>
    type: <xref href="Microsoft.Identity.Client.TokenCacheCallback?alt=Microsoft.Identity.Client.TokenCacheCallback&text=TokenCacheCallback" data-throw-if-not-resolved="True"/>
  implementsWithMoniker:
  - value: <xref href="Microsoft.Identity.Client.ITokenCache.SetAfterAccess(Microsoft.Identity.Client.TokenCacheCallback)?alt=Microsoft.Identity.Client.ITokenCache.SetAfterAccess(Microsoft.Identity.Client.TokenCacheCallback)&text=SetAfterAccess(TokenCacheCallback)" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.TokenCache.SetAfterAccess(Microsoft.Identity.Client.TokenCacheCallback)
  commentId: M:Microsoft.Identity.Client.TokenCache.SetAfterAccess(Microsoft.Identity.Client.TokenCacheCallback)
  name: SetAfterAccess(TokenCacheCallback)
  fullName: Microsoft.Identity.Client.TokenCache.SetAfterAccess(TokenCacheCallback)
  nameWithType: TokenCache.SetAfterAccess(TokenCacheCallback)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void SetAfterAccess (Microsoft.Identity.Client.TokenCacheCallback afterAccess);
  - lang: fsharp
    values:
    - value: >-
        abstract member SetAfterAccess : Microsoft.Identity.Client.TokenCacheCallback -> unit

        override this.SetAfterAccess : Microsoft.Identity.Client.TokenCacheCallback -> unit
  - lang: vb
    values:
    - value: Public Sub SetAfterAccess (afterAccess As TokenCacheCallback)
  monikers:
  - msal-dotnet-latest
  summary: >-
    Sets a delegate to be notified after any library method accesses the cache. This gives an option to the

    delegate to serialize a cache entry for the application and accounts specified in the <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.TokenCacheNotificationArgs"></xref>.

    See https://aka.ms/msal-net-token-cache-serialization
  remarks: <p>In the case where the delegate is used to serialize the cache entirely (not just a row), it might want to call <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.TokenCache.Serialize"></xref></p>
  metadata: {}
uid: Microsoft.Identity.Client.TokenCache.SetAfterAccess*
commentId: Overload:Microsoft.Identity.Client.TokenCache.SetAfterAccess
namespace: Microsoft.Identity.Client
name: SetAfterAccess
fullName: Microsoft.Identity.Client.TokenCache.SetAfterAccess
nameWithType: TokenCache.SetAfterAccess
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.TokenCache.SetAfterAccess
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.TokenCache.SetAfterAccess
  - Microsoft::Identity::Client::TokenCache::SetAfterAccess
  - SetAfterAccess
  - TokenCache.SetAfterAccess
  - TokenCache::SetAfterAccess
  helpviewer_keywords:
  - TokenCache.SetAfterAccess method [.NET]
  - SetAfterAccess method [.NET], class TokenCache
  - TokenCache.SetAfterAccess(TokenCacheCallback) method [.NET]
  - SetAfterAccess(TokenCacheCallback) method [.NET], class TokenCache
  monikers:
  - msal-dotnet-latest
