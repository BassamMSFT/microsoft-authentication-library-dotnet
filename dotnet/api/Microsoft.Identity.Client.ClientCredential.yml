### YamlMime:NetType
type: class
inheritancesWithMoniker:
- values:
  - <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>
constructors:
- uid: Microsoft.Identity.Client.ClientCredential.#ctor(Microsoft.Identity.Client.ClientAssertionCertificate)
  monikers:
  - msal-dotnet-latest
- uid: Microsoft.Identity.Client.ClientCredential.#ctor(System.String)
  monikers:
  - msal-dotnet-latest
uid: Microsoft.Identity.Client.ClientCredential
commentId: T:Microsoft.Identity.Client.ClientCredential
namespace: Microsoft.Identity.Client
name: ClientCredential
fullName: Microsoft.Identity.Client.ClientCredential
nameWithType: Microsoft.Identity.Client.ClientCredential
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
attributesWithMoniker:
- value: System.ObsoleteAttribute
syntaxWithMoniker:
- lang: csharp
  values:
  - value: >-
      [System.Obsolete("Use ConfidentialClientApplicationBuilder.WithCertificate or WithClientSecret instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)]

      public sealed class ClientCredential
- lang: fsharp
  values:
  - value: >-
      [<System.Obsolete("Use ConfidentialClientApplicationBuilder.WithCertificate or WithClientSecret instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)>]

      type ClientCredential = class
- lang: vb
  values:
  - value: Public NotInheritable Class ClientCredential
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
obsoleteMessagesWithMoniker:
- value: 'Use ConfidentialClientApplicationBuilder.WithCertificate or WithClientSecret instead. See https://aka.ms/msal-net-3-breaking-changes. '
summary: >-
  Meant to be used in confidential client applications, an instance of <code data-dev-comment-type="c">ClientCredential</code> is passed

  to the constructors of (<xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.ConfidentialClientApplication"></xref>)

  as credentials proving that the application (the client) is what it claims it is. These credentials can be

  either a client secret (an application password) or a certificate.

  This class has one constructor for each case.

  These credentials are added in the application registration portal (in the secret section).
metadata:
  api_name:
  - Microsoft.Identity.Client.ClientCredential
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.ClientCredential
  - Microsoft::Identity::Client::ClientCredential
  - ClientCredential
  helpviewer_keywords:
  - Microsoft.Identity.Client.ClientCredential class [.NET]
  monikers:
  - msal-dotnet-latest
