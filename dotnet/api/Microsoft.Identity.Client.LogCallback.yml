### YamlMime:NetDelegate
parameters:
- namesWithMoniker:
  - value: level
  description: Log level of the log message to process
  type: <xref href="Microsoft.Identity.Client.LogLevel?alt=Microsoft.Identity.Client.LogLevel&text=LogLevel" data-throw-if-not-resolved="True"/>
- namesWithMoniker:
  - value: message
  description: Pre-formatted log message
  type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
- namesWithMoniker:
  - value: containsPii
  description: >-
    Indicates if the log message contains Organizational Identifiable Information (OII)
                or Personally Identifiable Information (PII) nor not.
                If <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.Logger.PiiLoggingEnabled"></xref> is set to <code data-dev-comment-type="c">false</code> then this value is always false.
                Otherwise it will be <code data-dev-comment-type="c">true</code> when the message contains PII.
  type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
inheritances:
- <xref href="System.Delegate" data-throw-if-not-resolved="True"/>
uid: Microsoft.Identity.Client.LogCallback
commentId: T:Microsoft.Identity.Client.LogCallback
namespace: Microsoft.Identity.Client
name: LogCallback
fullName: Microsoft.Identity.Client.LogCallback
nameWithType: Microsoft.Identity.Client.LogCallback
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public delegate void LogCallback(LogLevel level, string message, bool containsPii);
- lang: fsharp
  values:
  - value: type LogCallback = delegate of LogLevel * string * bool -> unit
- lang: vb
  values:
  - value: Public Delegate Sub LogCallback(level As LogLevel, message As String, containsPii As Boolean)
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
seeAlso: >+
  - <xref:Microsoft.Identity.Client.Logger>

summary: >-
  Callback delegate that allows application developers to consume logs, and handle them in a custom manner. This

  callback is set using <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.Identity.Client.LogCallback,System.Nullable{Microsoft.Identity.Client.LogLevel},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"></xref>.

  If <code data-dev-comment-type="c">PiiLoggingEnabled</code> is set to <code data-dev-comment-type="c">true</code>, when registering the callback this method will receive the messages twice:

  once with the <code data-dev-comment-type="c">containsPii</code> parameter equals <code data-dev-comment-type="c">false</code> and the message without PII,

  and a second time with the <code data-dev-comment-type="c">containsPii</code> parameter equals to <code data-dev-comment-type="c">true</code> and the message might contain PII.

  In some cases (when the message does not contain PII), the message will be the same.

  For details see https://aka.ms/msal-net-logging
metadata:
  api_name:
  - Microsoft.Identity.Client.LogCallback
  - Microsoft.Identity.Client.LogCallback..ctor
  - Microsoft.Identity.Client.LogCallback.Invoke
  - Microsoft.Identity.Client.LogCallback.BeginInvoke
  - Microsoft.Identity.Client.LogCallback.EndInvoke
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.LogCallback
  - Microsoft::Identity::Client::LogCallback
  - LogCallback
  helpviewer_keywords:
  - Microsoft.Identity.Client.LogCallback delegate [.NET]
  monikers:
  - msal-dotnet-latest
