### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.Identity.Client.ConfidentialClientApplicationBuilder?alt=Microsoft.Identity.Client.ConfidentialClientApplicationBuilder&text=ConfidentialClientApplicationBuilder" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: builder
    type: <xref href="Microsoft.Identity.Client.ConfidentialClientApplicationBuilder?alt=Microsoft.Identity.Client.ConfidentialClientApplicationBuilder&text=ConfidentialClientApplicationBuilder" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: appTokenProvider
    type: <xref href="System.Func`2?alt=System.Func&text=Func" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.Extensibility.AppTokenProviderParameters?alt=Microsoft.Identity.Client.Extensibility.AppTokenProviderParameters&text=AppTokenProviderParameters" data-throw-if-not-resolved="True"/>,<xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.Extensibility.AppTokenProviderResult?alt=Microsoft.Identity.Client.Extensibility.AppTokenProviderResult&text=AppTokenProviderResult" data-throw-if-not-resolved="True"/>&gt;&gt;
  type: method
  uid: Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider(Microsoft.Identity.Client.ConfidentialClientApplicationBuilder,System.Func{Microsoft.Identity.Client.Extensibility.AppTokenProviderParameters,System.Threading.Tasks.Task{Microsoft.Identity.Client.Extensibility.AppTokenProviderResult}})
  commentId: M:Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider(Microsoft.Identity.Client.ConfidentialClientApplicationBuilder,System.Func{Microsoft.Identity.Client.Extensibility.AppTokenProviderParameters,System.Threading.Tasks.Task{Microsoft.Identity.Client.Extensibility.AppTokenProviderResult}})
  name: WithAppTokenProvider(ConfidentialClientApplicationBuilder, Func<AppTokenProviderParameters,Task<AppTokenProviderResult>>)
  fullName: Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider(ConfidentialClientApplicationBuilder, Func<AppTokenProviderParameters,Task<AppTokenProviderResult>>)
  nameWithType: ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider(ConfidentialClientApplicationBuilder, Func<AppTokenProviderParameters,Task<AppTokenProviderResult>>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static Microsoft.Identity.Client.ConfidentialClientApplicationBuilder WithAppTokenProvider (this Microsoft.Identity.Client.ConfidentialClientApplicationBuilder builder, Func<Microsoft.Identity.Client.Extensibility.AppTokenProviderParameters,System.Threading.Tasks.Task<Microsoft.Identity.Client.Extensibility.AppTokenProviderResult>> appTokenProvider);
  - lang: fsharp
    values:
    - value: 'static member WithAppTokenProvider : Microsoft.Identity.Client.ConfidentialClientApplicationBuilder * Func<Microsoft.Identity.Client.Extensibility.AppTokenProviderParameters, System.Threading.Tasks.Task<Microsoft.Identity.Client.Extensibility.AppTokenProviderResult>> -> Microsoft.Identity.Client.ConfidentialClientApplicationBuilder'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function WithAppTokenProvider (builder As ConfidentialClientApplicationBuilder, appTokenProvider As Func(Of AppTokenProviderParameters, Task(Of AppTokenProviderResult))) As ConfidentialClientApplicationBuilder
  monikers:
  - msal-dotnet-latest
  summary: >-
    Allows setting a callback which returns an access token, based on the passed-in parameters.

    MSAL will pass in its authentication parameters to the callback and it is expected that the callback

    will construct a <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.Extensibility.AppTokenProviderResult"></xref> and return it to MSAL.

    MSAL will cache the token response the same way it does for other authentication results.
  remarks: <p>This is part of an extensibility mechanism designed to be used only by Azure SDK in order to enchance managed identity support. Only client_credential flow is supported.</p>
  metadata: {}
uid: Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider*
commentId: Overload:Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider
namespace: Microsoft.Identity.Client.Extensibility
name: WithAppTokenProvider
fullName: Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider
nameWithType: ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.Extensibility.ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider
  - Microsoft::Identity::Client::Extensibility::ConfidentialClientApplicationBuilderExtensions::WithAppTokenProvider
  - WithAppTokenProvider
  - ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider
  - ConfidentialClientApplicationBuilderExtensions::WithAppTokenProvider
  helpviewer_keywords:
  - ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider method [.NET]
  - WithAppTokenProvider method [.NET], class ConfidentialClientApplicationBuilderExtensions
  - ConfidentialClientApplicationBuilderExtensions.WithAppTokenProvider(ConfidentialClientApplicationBuilder, Func<AppTokenProviderParameters,Task<AppTokenProviderResult>>) extension method [.NET]
  - WithAppTokenProvider(ConfidentialClientApplicationBuilder, Func<AppTokenProviderParameters,Task<AppTokenProviderResult>>) extension method [.NET], class ConfidentialClientApplicationBuilderExtensions
  monikers:
  - msal-dotnet-latest
