### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.IdentityModel.Tokens.ICryptoProvider?alt=Microsoft.IdentityModel.Tokens.ICryptoProvider&text=ICryptoProvider" data-throw-if-not-resolved="True"/>
  type: property
  uid: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider
  commentId: P:Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider
  name: CustomCryptoProvider
  fullName: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider
  nameWithType: CryptoProviderFactory.CustomCryptoProvider
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Microsoft.IdentityModel.Tokens.ICryptoProvider CustomCryptoProvider { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.CustomCryptoProvider : Microsoft.IdentityModel.Tokens.ICryptoProvider with get, set'
  - lang: vb
    values:
    - value: Public Property CustomCryptoProvider As ICryptoProvider
  monikers:
  - msal-web-dotnet-latest
  summary: Extensibility point for creating custom cryptographic operators.
  remarks: <p>By default, if set, <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.IsSupportedAlgorithm(System.String,System.Object[])"></xref> will be called before creating cryptographic operators. If true is returned, then <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.Create(System.String,System.Object[])"></xref> will be called. The <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.CryptoProviderFactory"></xref> will throw if the Cryptographic operator returned is not of the correct type.</p>
  metadata: {}
uid: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider*
commentId: Overload:Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider
namespace: Microsoft.IdentityModel.Tokens
name: CustomCryptoProvider
fullName: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider
nameWithType: CryptoProviderFactory.CustomCryptoProvider
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Tokens.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Tokens v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider
  - Microsoft.IdentityModel.Tokens.CryptoProviderFactory.get_CustomCryptoProvider
  - Microsoft.IdentityModel.Tokens.CryptoProviderFactory.set_CustomCryptoProvider
  api_location:
  - Microsoft.IdentityModel.Tokens.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider
  - Microsoft::IdentityModel::Tokens::CryptoProviderFactory::CustomCryptoProvider
  - CustomCryptoProvider
  - CryptoProviderFactory.CustomCryptoProvider
  - CryptoProviderFactory::CustomCryptoProvider
  helpviewer_keywords:
  - CryptoProviderFactory.CustomCryptoProvider property [.NET]
  - CustomCryptoProvider property [.NET], class CryptoProviderFactory
  monikers:
  - msal-web-dotnet-latest
