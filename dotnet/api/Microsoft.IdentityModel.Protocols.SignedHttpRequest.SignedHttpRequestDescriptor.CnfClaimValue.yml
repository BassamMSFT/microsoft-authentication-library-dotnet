### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: property
  uid: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue
  commentId: P:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue
  name: CnfClaimValue
  fullName: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue
  nameWithType: SignedHttpRequestDescriptor.CnfClaimValue
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public string CnfClaimValue { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.CnfClaimValue : string with get, set'
  - lang: vb
    values:
    - value: Public Property CnfClaimValue As String
  monikers:
  - msal-web-dotnet-latest
  summary: Gets or sets a "cnf" claim value as a JSON string.
  remarks: <p>If <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters.CreateCnf"></xref> flag is set to <code data-dev-comment-type="c">true</code>, <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue"></xref> can be used as a "cnf" claim value when creating a SignedHttpRequest payload. If <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters.CreateCnf"></xref> flag is set to <code data-dev-comment-type="c">true</code>, and <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue"></xref> is null or empty, a "cnf" claim value will be derived from a <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.SigningCredentials"></xref>.<xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref>.</p>
  metadata: {}
uid: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue*
commentId: Overload:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue
namespace: Microsoft.IdentityModel.Protocols.SignedHttpRequest
name: CnfClaimValue
fullName: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue
nameWithType: SignedHttpRequestDescriptor.CnfClaimValue
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Protocols.SignedHttpRequest.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Protocols.SignedHttpRequest v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.get_CnfClaimValue
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.set_CnfClaimValue
  api_location:
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.CnfClaimValue
  - Microsoft::IdentityModel::Protocols::SignedHttpRequest::SignedHttpRequestDescriptor::CnfClaimValue
  - CnfClaimValue
  - SignedHttpRequestDescriptor.CnfClaimValue
  - SignedHttpRequestDescriptor::CnfClaimValue
  helpviewer_keywords:
  - SignedHttpRequestDescriptor.CnfClaimValue property [.NET]
  - CnfClaimValue property [.NET], class SignedHttpRequestDescriptor
  monikers:
  - msal-web-dotnet-latest
