### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Net.Http.HttpResponseMessage?alt=System.Net.Http.HttpResponseMessage&text=HttpResponseMessage" data-throw-if-not-resolved="True"/>&gt;
    description: An <xref data-throw-if-not-resolved="true" uid="System.Net.Http.HttpResponseMessage"></xref> that the application will process.
  parameters:
  - namesWithMoniker:
    - value: downstreamRestApiOptions
    description: Options.
    type: <xref href="Microsoft.Identity.Abstractions.DownstreamRestApiOptions?alt=Microsoft.Identity.Abstractions.DownstreamRestApiOptions&text=DownstreamRestApiOptions" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: user
    description: >-
      (Optional) Claims representing a user. This is useful on platforms like Blazor
                  or Azure Signal R, where the HttpContext is not available. In other platforms, the library
                  will find the user from the HTTP request context.
    type: <xref href="System.Security.Claims.ClaimsPrincipal?alt=System.Security.Claims.ClaimsPrincipal&text=ClaimsPrincipal" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: >-
      Content to send to the REST API in the case where
                  <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions.HttpMethod"></xref> is <code>HttpMethod.Patch</code>, 
                  <xref data-throw-if-not-resolved="true" uid="System.Net.Http.HttpMethod.Post"></xref>, <xref data-throw-if-not-resolved="true" uid="System.Net.Http.HttpMethod.Put"></xref>.
    type: <xref href="System.Net.Http.HttpContent?alt=System.Net.Http.HttpContent&text=HttpContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync(Microsoft.Identity.Abstractions.DownstreamRestApiOptions,System.Security.Claims.ClaimsPrincipal,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync(Microsoft.Identity.Abstractions.DownstreamRestApiOptions,System.Security.Claims.ClaimsPrincipal,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  name: CallRestApiAsync(DownstreamRestApiOptions, ClaimsPrincipal, HttpContent, CancellationToken)
  fullName: Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync(DownstreamRestApiOptions, ClaimsPrincipal, HttpContent, CancellationToken)
  nameWithType: IDownstreamRestApi.CallRestApiAsync(DownstreamRestApiOptions, ClaimsPrincipal, HttpContent, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> CallRestApiAsync (Microsoft.Identity.Abstractions.DownstreamRestApiOptions downstreamRestApiOptions, System.Security.Claims.ClaimsPrincipal? user = default, System.Net.Http.HttpContent? content = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'abstract member CallRestApiAsync : Microsoft.Identity.Abstractions.DownstreamRestApiOptions * System.Security.Claims.ClaimsPrincipal * System.Net.Http.HttpContent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>'
  - lang: vb
    values:
    - value: Public Function CallRestApiAsync (downstreamRestApiOptions As DownstreamRestApiOptions, Optional user As ClaimsPrincipal = Nothing, Optional content As HttpContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpResponseMessage)
  monikers:
  - msal-model-dotnet-latest
  summary: >-
    Calls the downstream REST API based on a programmatic description of the

    downstream REST API. The choice of calling the API on behalf of the user or the app, is made using

    <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions.RequestAppToken"></xref>.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Net.Http.HttpResponseMessage?alt=System.Net.Http.HttpResponseMessage&text=HttpResponseMessage" data-throw-if-not-resolved="True"/>&gt;
    description: An <xref data-throw-if-not-resolved="true" uid="System.Net.Http.HttpResponseMessage"></xref> that the application will process.
  parameters:
  - namesWithMoniker:
    - value: serviceName
    description: >-
      Name of the service describing the downstream web API. There can
                  be several configuration named sections mapped to a <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Abstractions.DownstreamRestApiOptions"></xref>,
                  each for one downstream REST API. You can pass-in null, but in that case <code data-dev-comment-type="paramref">downstreamRestApiOptionsOverride</code>
                  needs to be set.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: downstreamRestApiOptionsOverride
    description: >-
      (Optional) Overrides the options proposed in the configuration described
                  by <code data-dev-comment-type="paramref">serviceName</code>. Can be null, in which case only the configuration is applied.
    type: <xref href="System.Action`1?alt=System.Action&text=Action" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Abstractions.DownstreamRestApiOptions?alt=Microsoft.Identity.Abstractions.DownstreamRestApiOptions&text=DownstreamRestApiOptions" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: user
    description: >-
      (Optional) Claims representing a user. This is useful on platforms like Blazor
                  or Azure Signal R, where the HttpContext is not available. In other platforms, the library
                  will find the user from the HTTP request context.
    type: <xref href="System.Security.Claims.ClaimsPrincipal?alt=System.Security.Claims.ClaimsPrincipal&text=ClaimsPrincipal" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: content
    description: >-
      Content to send to the REST API in the case where
                  <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions.HttpMethod"></xref> is <code>HttpMethod.Patch</code>, 
                  <xref data-throw-if-not-resolved="true" uid="System.Net.Http.HttpMethod.Post"></xref>, <xref data-throw-if-not-resolved="true" uid="System.Net.Http.HttpMethod.Put"></xref>.
    type: <xref href="System.Net.Http.HttpContent?alt=System.Net.Http.HttpContent&text=HttpContent" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cancellationToken
    description: Cancellation token.
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync(System.String,System.Action{Microsoft.Identity.Abstractions.DownstreamRestApiOptions},System.Security.Claims.ClaimsPrincipal,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync(System.String,System.Action{Microsoft.Identity.Abstractions.DownstreamRestApiOptions},System.Security.Claims.ClaimsPrincipal,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  name: CallRestApiAsync(String, Action<DownstreamRestApiOptions>, ClaimsPrincipal, HttpContent, CancellationToken)
  fullName: Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync(String, Action<DownstreamRestApiOptions>, ClaimsPrincipal, HttpContent, CancellationToken)
  nameWithType: IDownstreamRestApi.CallRestApiAsync(String, Action<DownstreamRestApiOptions>, ClaimsPrincipal, HttpContent, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> CallRestApiAsync (string? serviceName, Action<Microsoft.Identity.Abstractions.DownstreamRestApiOptions>? downstreamRestApiOptionsOverride = default, System.Security.Claims.ClaimsPrincipal? user = default, System.Net.Http.HttpContent? content = default, System.Threading.CancellationToken cancellationToken = default);
  - lang: fsharp
    values:
    - value: 'abstract member CallRestApiAsync : string * Action<Microsoft.Identity.Abstractions.DownstreamRestApiOptions> * System.Security.Claims.ClaimsPrincipal * System.Net.Http.HttpContent * System.Threading.CancellationToken -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>'
  - lang: vb
    values:
    - value: Public Function CallRestApiAsync (serviceName As String, Optional downstreamRestApiOptionsOverride As Action(Of DownstreamRestApiOptions) = Nothing, Optional user As ClaimsPrincipal = Nothing, Optional content As HttpContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpResponseMessage)
  monikers:
  - msal-model-dotnet-latest
  summary: >-
    Calls the downstream REST API based on a description of the

    downstream REST API in the configuration (service name), overridatable programmatically. The choice

    of calling the API on behalf of the user or the app, is made by the configuration or programmatically. 

    This is the lowest level API. There are other APIs for specific Http methods.
  metadata: {}
uid: Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync*
commentId: Overload:Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync
namespace: Microsoft.Identity.Abstractions
name: CallRestApiAsync
fullName: Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync
nameWithType: IDownstreamRestApi.CallRestApiAsync
assembliesWithMoniker:
- value: Microsoft.Identity.Abstractions.dll
packagesWithMoniker:
- value: Microsoft.Identity.Abstractions v1.1.0
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-model-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync
  api_location:
  - Microsoft.Identity.Abstractions.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Abstractions.IDownstreamRestApi.CallRestApiAsync
  - Microsoft::Identity::Abstractions::IDownstreamRestApi::CallRestApiAsync
  - CallRestApiAsync
  - IDownstreamRestApi.CallRestApiAsync
  - IDownstreamRestApi::CallRestApiAsync
  helpviewer_keywords:
  - IDownstreamRestApi.CallRestApiAsync method [.NET]
  - CallRestApiAsync method [.NET], interface IDownstreamRestApi
  - IDownstreamRestApi.CallRestApiAsync(DownstreamRestApiOptions, ClaimsPrincipal, HttpContent, CancellationToken) method [.NET]
  - CallRestApiAsync(DownstreamRestApiOptions, ClaimsPrincipal, HttpContent, CancellationToken) method [.NET], interface IDownstreamRestApi
  - IDownstreamRestApi.CallRestApiAsync(String, Action<DownstreamRestApiOptions>, ClaimsPrincipal, HttpContent, CancellationToken) method [.NET]
  - CallRestApiAsync(String, Action<DownstreamRestApiOptions>, ClaimsPrincipal, HttpContent, CancellationToken) method [.NET], interface IDownstreamRestApi
  monikers:
  - msal-model-dotnet-latest
