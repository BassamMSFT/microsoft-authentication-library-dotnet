### YamlMime:NetMember
type: property
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Collections.Generic.IDictionary`2?alt=System.Collections.Generic.IDictionary&text=IDictionary" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>,<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  exceptions:
  - description: "'value' is null."
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: property
  uid: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap
  commentId: P:System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap
  name: OutboundClaimTypeMap
  fullName: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap
  nameWithType: JwtSecurityTokenHandler.OutboundClaimTypeMap
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Collections.Generic.IDictionary<string,string> OutboundClaimTypeMap { get; set; }
  - lang: fsharp
    values:
    - value: 'member this.OutboundClaimTypeMap : System.Collections.Generic.IDictionary<string, string> with get, set'
  - lang: vb
    values:
    - value: Public Property OutboundClaimTypeMap As IDictionary(Of String, String)
  monikers:
  - msal-web-dotnet-latest
  summary: >-
    <p>Gets or sets the <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap"></xref> which is used when creating a <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtSecurityToken"></xref> from <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim"></xref>(s).</p>

    <p>The JSON claim 'name' value is set to <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim.Type"></xref> after translating using this mapping.</p>

    <p>The default value is ClaimTypeMapping.OutboundClaimTypeMap</p>
  remarks: This mapping is applied only when using <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaim(System.Security.Claims.Claim)"></xref> or <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})"></xref>. Adding values directly will not result in translation.
  metadata: {}
uid: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap*
commentId: Overload:System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap
namespace: System.IdentityModel.Tokens.Jwt
name: OutboundClaimTypeMap
fullName: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap
nameWithType: JwtSecurityTokenHandler.OutboundClaimTypeMap
assembliesWithMoniker:
- value: System.IdentityModel.Tokens.Jwt.dll
packagesWithMoniker:
- value: System.IdentityModel.Tokens.Jwt v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap
  - System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.get_OutboundClaimTypeMap
  - System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.set_OutboundClaimTypeMap
  api_location:
  - System.IdentityModel.Tokens.Jwt.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.OutboundClaimTypeMap
  - System::IdentityModel::Tokens::Jwt::JwtSecurityTokenHandler::OutboundClaimTypeMap
  - OutboundClaimTypeMap
  - JwtSecurityTokenHandler.OutboundClaimTypeMap
  - JwtSecurityTokenHandler::OutboundClaimTypeMap
  helpviewer_keywords:
  - JwtSecurityTokenHandler.OutboundClaimTypeMap property [.NET]
  - OutboundClaimTypeMap property [.NET], class JwtSecurityTokenHandler
  monikers:
  - msal-web-dotnet-latest
