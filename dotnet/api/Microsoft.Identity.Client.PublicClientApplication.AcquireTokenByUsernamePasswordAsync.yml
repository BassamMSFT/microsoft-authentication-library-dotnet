### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.AuthenticationResult?alt=Microsoft.Identity.Client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="True"/>&gt;
    description: Authentication result containing a token for the requested scopes and account
  parameters:
  - namesWithMoniker:
    - value: scopes
    description: Scopes requested to access a protected API
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: username
    description: >-
      Identifier of the user application requests token on behalf.
                  Generally in UserPrincipalName (UPN) format, e.g. john.doe@contoso.com
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: securePassword
    description: User password.
    type: <xref href="System.Security.SecureString?alt=System.Security.SecureString&text=SecureString" data-throw-if-not-resolved="True"/>
  implementsWithMoniker:
  - value: <xref href="Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByUsernamePasswordAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Security.SecureString)?alt=Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByUsernamePasswordAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Security.SecureString)&text=AcquireTokenByUsernamePasswordAsync(IEnumerable%3CString%3E%2C+String%2C+SecureString)" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Security.SecureString)
  commentId: M:Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Security.SecureString)
  name: AcquireTokenByUsernamePasswordAsync(IEnumerable<String>, String, SecureString)
  fullName: Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync(IEnumerable<String>, String, SecureString)
  nameWithType: PublicClientApplication.AcquireTokenByUsernamePasswordAsync(IEnumerable<String>, String, SecureString)
  attributesWithMoniker:
  - value: System.ObsoleteAttribute
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: >-
        [System.Obsolete("Use AcquireTokenByUsernamePassword instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)]

        public System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult> AcquireTokenByUsernamePasswordAsync (System.Collections.Generic.IEnumerable<string> scopes, string username, System.Security.SecureString securePassword);
  - lang: fsharp
    values:
    - value: >-
        [<System.Obsolete("Use AcquireTokenByUsernamePassword instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)>]

        abstract member AcquireTokenByUsernamePasswordAsync : seq<string> * string * System.Security.SecureString -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>

        override this.AcquireTokenByUsernamePasswordAsync : seq<string> * string * System.Security.SecureString -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>
  - lang: vb
    values:
    - value: Public Function AcquireTokenByUsernamePasswordAsync (scopes As IEnumerable(Of String), username As String, securePassword As SecureString) As Task(Of AuthenticationResult)
  monikers:
  - msal-dotnet-latest
  obsoleteMessagesWithMoniker:
  - value: 'Use AcquireTokenByUsernamePassword instead. See https://aka.ms/msal-net-3-breaking-changes. '
  summary: >-
    Non-interactive request to acquire a security token from the authority, via Username/Password Authentication.

    Available only on .net desktop and .net core. See https://aka.ms/msal-net-up for details.
  metadata: {}
uid: Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync*
commentId: Overload:Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync
namespace: Microsoft.Identity.Client
name: AcquireTokenByUsernamePasswordAsync
fullName: Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync
nameWithType: PublicClientApplication.AcquireTokenByUsernamePasswordAsync
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.PublicClientApplication.AcquireTokenByUsernamePasswordAsync
  - Microsoft::Identity::Client::PublicClientApplication::AcquireTokenByUsernamePasswordAsync
  - AcquireTokenByUsernamePasswordAsync
  - PublicClientApplication.AcquireTokenByUsernamePasswordAsync
  - PublicClientApplication::AcquireTokenByUsernamePasswordAsync
  helpviewer_keywords:
  - PublicClientApplication.AcquireTokenByUsernamePasswordAsync method [.NET]
  - AcquireTokenByUsernamePasswordAsync method [.NET], class PublicClientApplication
  - PublicClientApplication.AcquireTokenByUsernamePasswordAsync(IEnumerable<String>, String, SecureString) method [.NET]
  - AcquireTokenByUsernamePasswordAsync(IEnumerable<String>, String, SecureString) method [.NET], class PublicClientApplication
  monikers:
  - msal-dotnet-latest
