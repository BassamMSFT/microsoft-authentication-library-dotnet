### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: tokenCache
    type: <xref href="Microsoft.Identity.Client.ITokenCacheSerializer?alt=Microsoft.Identity.Client.ITokenCacheSerializer&text=ITokenCacheSerializer" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: account
    type: <xref href="Microsoft.Identity.Client.IAccount?alt=Microsoft.Identity.Client.IAccount&text=IAccount" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasStateChanged
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isApplicationCache
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheKey
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasTokens
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheExpiry
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.DateTimeOffset?alt=System.DateTimeOffset&text=DateTimeOffset" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  commentId: M:Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  name: TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken)
  fullName: Microsoft.Identity.Client.TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken)
  nameWithType: TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TokenCacheNotificationArgs (Microsoft.Identity.Client.ITokenCacheSerializer tokenCache, string clientId, Microsoft.Identity.Client.IAccount account, bool hasStateChanged, bool isApplicationCache, string suggestedCacheKey, bool hasTokens, DateTimeOffset? suggestedCacheExpiry, System.Threading.CancellationToken cancellationToken);
  - lang: fsharp
    values:
    - value: 'new Microsoft.Identity.Client.TokenCacheNotificationArgs : Microsoft.Identity.Client.ITokenCacheSerializer * string * Microsoft.Identity.Client.IAccount * bool * bool * string * bool * Nullable<DateTimeOffset> * System.Threading.CancellationToken -> Microsoft.Identity.Client.TokenCacheNotificationArgs'
  - lang: vb
    values:
    - value: Public Sub New (tokenCache As ITokenCacheSerializer, clientId As String, account As IAccount, hasStateChanged As Boolean, isApplicationCache As Boolean, suggestedCacheKey As String, hasTokens As Boolean, suggestedCacheExpiry As Nullable(Of DateTimeOffset), cancellationToken As CancellationToken)
  monikers:
  - msal-dotnet-latest
  summary: This constructor is for test purposes only. It allows apps to unit test their MSAL token cache implementation code.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: tokenCache
    type: <xref href="Microsoft.Identity.Client.ITokenCacheSerializer?alt=Microsoft.Identity.Client.ITokenCacheSerializer&text=ITokenCacheSerializer" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: account
    type: <xref href="Microsoft.Identity.Client.IAccount?alt=Microsoft.Identity.Client.IAccount&text=IAccount" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasStateChanged
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isApplicationCache
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheKey
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasTokens
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheExpiry
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.DateTimeOffset?alt=System.DateTimeOffset&text=DateTimeOffset" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: correlationId
    type: <xref href="System.Guid?alt=System.Guid&text=Guid" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken,System.Guid)
  commentId: M:Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken,System.Guid)
  name: >-
    TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount,

     Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>,

     CancellationToken, Guid)
  fullName: Microsoft.Identity.Client.TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid)
  nameWithType: TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TokenCacheNotificationArgs (Microsoft.Identity.Client.ITokenCacheSerializer tokenCache, string clientId, Microsoft.Identity.Client.IAccount account, bool hasStateChanged, bool isApplicationCache, string suggestedCacheKey, bool hasTokens, DateTimeOffset? suggestedCacheExpiry, System.Threading.CancellationToken cancellationToken, Guid correlationId);
  - lang: fsharp
    values:
    - value: 'new Microsoft.Identity.Client.TokenCacheNotificationArgs : Microsoft.Identity.Client.ITokenCacheSerializer * string * Microsoft.Identity.Client.IAccount * bool * bool * string * bool * Nullable<DateTimeOffset> * System.Threading.CancellationToken * Guid -> Microsoft.Identity.Client.TokenCacheNotificationArgs'
  - lang: vb
    values:
    - value: Public Sub New (tokenCache As ITokenCacheSerializer, clientId As String, account As IAccount, hasStateChanged As Boolean, isApplicationCache As Boolean, suggestedCacheKey As String, hasTokens As Boolean, suggestedCacheExpiry As Nullable(Of DateTimeOffset), cancellationToken As CancellationToken, correlationId As Guid)
  monikers:
  - msal-dotnet-latest
  summary: This constructor is for test purposes only. It allows apps to unit test their MSAL token cache implementation code.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: tokenCache
    type: <xref href="Microsoft.Identity.Client.ITokenCacheSerializer?alt=Microsoft.Identity.Client.ITokenCacheSerializer&text=ITokenCacheSerializer" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: account
    type: <xref href="Microsoft.Identity.Client.IAccount?alt=Microsoft.Identity.Client.IAccount&text=IAccount" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasStateChanged
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isApplicationCache
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheKey
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasTokens
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheExpiry
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.DateTimeOffset?alt=System.DateTimeOffset&text=DateTimeOffset" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: correlationId
    type: <xref href="System.Guid?alt=System.Guid&text=Guid" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: requestScopes
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: requestTenantId
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken,System.Guid,System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken,System.Guid,System.Collections.Generic.IEnumerable{System.String},System.String)
  name: >-
    TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount,

     Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>,

     CancellationToken, Guid, IEnumerable<String>, String)
  fullName: Microsoft.Identity.Client.TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid, IEnumerable<String>, String)
  nameWithType: TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid, IEnumerable<String>, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TokenCacheNotificationArgs (Microsoft.Identity.Client.ITokenCacheSerializer tokenCache, string clientId, Microsoft.Identity.Client.IAccount account, bool hasStateChanged, bool isApplicationCache, string suggestedCacheKey, bool hasTokens, DateTimeOffset? suggestedCacheExpiry, System.Threading.CancellationToken cancellationToken, Guid correlationId, System.Collections.Generic.IEnumerable<string> requestScopes, string requestTenantId);
  - lang: fsharp
    values:
    - value: 'new Microsoft.Identity.Client.TokenCacheNotificationArgs : Microsoft.Identity.Client.ITokenCacheSerializer * string * Microsoft.Identity.Client.IAccount * bool * bool * string * bool * Nullable<DateTimeOffset> * System.Threading.CancellationToken * Guid * seq<string> * string -> Microsoft.Identity.Client.TokenCacheNotificationArgs'
  - lang: vb
    values:
    - value: Public Sub New (tokenCache As ITokenCacheSerializer, clientId As String, account As IAccount, hasStateChanged As Boolean, isApplicationCache As Boolean, suggestedCacheKey As String, hasTokens As Boolean, suggestedCacheExpiry As Nullable(Of DateTimeOffset), cancellationToken As CancellationToken, correlationId As Guid, requestScopes As IEnumerable(Of String), requestTenantId As String)
  monikers:
  - msal-dotnet-latest
  summary: This constructor is for test purposes only. It allows apps to unit test their MSAL token cache implementation code.
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: tokenCache
    type: <xref href="Microsoft.Identity.Client.ITokenCacheSerializer?alt=Microsoft.Identity.Client.ITokenCacheSerializer&text=ITokenCacheSerializer" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: clientId
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: account
    type: <xref href="Microsoft.Identity.Client.IAccount?alt=Microsoft.Identity.Client.IAccount&text=IAccount" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasStateChanged
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: isApplicationCache
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheKey
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: hasTokens
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: suggestedCacheExpiry
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.DateTimeOffset?alt=System.DateTimeOffset&text=DateTimeOffset" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: cancellationToken
    type: <xref href="System.Threading.CancellationToken?alt=System.Threading.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: correlationId
    type: <xref href="System.Guid?alt=System.Guid&text=Guid" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: requestScopes
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: requestTenantId
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: identityLogger
    type: <xref href="Microsoft.IdentityModel.Abstractions.IIdentityLogger?alt=Microsoft.IdentityModel.Abstractions.IIdentityLogger&text=IIdentityLogger" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: piiLoggingEnabled
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken,System.Guid,System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.IdentityModel.Abstractions.IIdentityLogger,System.Boolean)
  commentId: M:Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor(Microsoft.Identity.Client.ITokenCacheSerializer,System.String,Microsoft.Identity.Client.IAccount,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken,System.Guid,System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.IdentityModel.Abstractions.IIdentityLogger,System.Boolean)
  name: >-
    TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount,

     Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>,

     CancellationToken, Guid, IEnumerable<String>, String, IIdentityLogger,

     Boolean)
  fullName: Microsoft.Identity.Client.TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid, IEnumerable<String>, String, IIdentityLogger, Boolean)
  nameWithType: TokenCacheNotificationArgs.TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid, IEnumerable<String>, String, IIdentityLogger, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public TokenCacheNotificationArgs (Microsoft.Identity.Client.ITokenCacheSerializer tokenCache, string clientId, Microsoft.Identity.Client.IAccount account, bool hasStateChanged, bool isApplicationCache, string suggestedCacheKey, bool hasTokens, DateTimeOffset? suggestedCacheExpiry, System.Threading.CancellationToken cancellationToken, Guid correlationId, System.Collections.Generic.IEnumerable<string> requestScopes, string requestTenantId, Microsoft.IdentityModel.Abstractions.IIdentityLogger identityLogger, bool piiLoggingEnabled);
  - lang: fsharp
    values:
    - value: 'new Microsoft.Identity.Client.TokenCacheNotificationArgs : Microsoft.Identity.Client.ITokenCacheSerializer * string * Microsoft.Identity.Client.IAccount * bool * bool * string * bool * Nullable<DateTimeOffset> * System.Threading.CancellationToken * Guid * seq<string> * string * Microsoft.IdentityModel.Abstractions.IIdentityLogger * bool -> Microsoft.Identity.Client.TokenCacheNotificationArgs'
  - lang: vb
    values:
    - value: Public Sub New (tokenCache As ITokenCacheSerializer, clientId As String, account As IAccount, hasStateChanged As Boolean, isApplicationCache As Boolean, suggestedCacheKey As String, hasTokens As Boolean, suggestedCacheExpiry As Nullable(Of DateTimeOffset), cancellationToken As CancellationToken, correlationId As Guid, requestScopes As IEnumerable(Of String), requestTenantId As String, identityLogger As IIdentityLogger, piiLoggingEnabled As Boolean)
  monikers:
  - msal-dotnet-latest
  summary: This constructor is for test purposes only. It allows apps to unit test their MSAL token cache implementation code.
  metadata: {}
uid: Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor*
commentId: Overload:Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor
namespace: Microsoft.Identity.Client
name: TokenCacheNotificationArgs
fullName: Microsoft.Identity.Client.TokenCacheNotificationArgs.TokenCacheNotificationArgs
nameWithType: TokenCacheNotificationArgs.TokenCacheNotificationArgs
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.TokenCacheNotificationArgs..ctor
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.TokenCacheNotificationArgs.#ctor
  - Microsoft::Identity::Client::TokenCacheNotificationArgs::#ctor
  - '#ctor'
  - TokenCacheNotificationArgs.#ctor
  - TokenCacheNotificationArgs::#ctor
  helpviewer_keywords:
  - TokenCacheNotificationArgs class [.NET], constructors
  - TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken) class [.NET], constructors
  - TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid) class [.NET], constructors
  - TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid, IEnumerable<String>, String) class [.NET], constructors
  - TokenCacheNotificationArgs(ITokenCacheSerializer, String, IAccount, Boolean, Boolean, String, Boolean, Nullable<DateTimeOffset>, CancellationToken, Guid, IEnumerable<String>, String, IIdentityLogger, Boolean) class [.NET], constructors
  monikers:
  - msal-dotnet-latest
