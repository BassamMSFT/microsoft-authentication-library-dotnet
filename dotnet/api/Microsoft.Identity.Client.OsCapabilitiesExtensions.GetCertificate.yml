### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2?alt=System.Security.Cryptography.X509Certificates.X509Certificate2&text=X509Certificate2" data-throw-if-not-resolved="True"/>
  parameters:
  - namesWithMoniker:
    - value: confidentialClientApplication
    type: <xref href="Microsoft.Identity.Client.IConfidentialClientApplication?alt=Microsoft.Identity.Client.IConfidentialClientApplication&text=IConfidentialClientApplication" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate(Microsoft.Identity.Client.IConfidentialClientApplication)
  commentId: M:Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate(Microsoft.Identity.Client.IConfidentialClientApplication)
  name: GetCertificate(IConfidentialClientApplication)
  fullName: Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate(IConfidentialClientApplication)
  nameWithType: OsCapabilitiesExtensions.GetCertificate(IConfidentialClientApplication)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public static System.Security.Cryptography.X509Certificates.X509Certificate2 GetCertificate (this Microsoft.Identity.Client.IConfidentialClientApplication confidentialClientApplication);
  - lang: fsharp
    values:
    - value: 'static member GetCertificate : Microsoft.Identity.Client.IConfidentialClientApplication -> System.Security.Cryptography.X509Certificates.X509Certificate2'
  - lang: vb
    values:
    - value: >-
        <Extension()>

        Public Function GetCertificate (confidentialClientApplication As IConfidentialClientApplication) As X509Certificate2
  monikers:
  - msal-dotnet-latest
  summary: Returns the certificate used to create this <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.ConfidentialClientApplication"></xref>, if any.
  metadata: {}
uid: Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate*
commentId: Overload:Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate
namespace: Microsoft.Identity.Client
name: GetCertificate
fullName: Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate
nameWithType: OsCapabilitiesExtensions.GetCertificate
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.OsCapabilitiesExtensions.GetCertificate
  - Microsoft::Identity::Client::OsCapabilitiesExtensions::GetCertificate
  - GetCertificate
  - OsCapabilitiesExtensions.GetCertificate
  - OsCapabilitiesExtensions::GetCertificate
  helpviewer_keywords:
  - OsCapabilitiesExtensions.GetCertificate method [.NET]
  - GetCertificate method [.NET], class OsCapabilitiesExtensions
  - OsCapabilitiesExtensions.GetCertificate(IConfidentialClientApplication) extension method [.NET]
  - GetCertificate(IConfidentialClientApplication) extension method [.NET], class OsCapabilitiesExtensions
  monikers:
  - msal-dotnet-latest
