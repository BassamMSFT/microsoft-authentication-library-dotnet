### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: T
    description: The builder to chain the .With methods.
  parameters:
  - namesWithMoniker:
    - value: scopes
    description: Scopes requested to access a protected API
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.WithScopes(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.WithScopes(System.Collections.Generic.IEnumerable{System.String})
  name: WithScopes(IEnumerable<String>)
  fullName: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder<T>.WithScopes(IEnumerable<String>)
  nameWithType: AbstractAcquireTokenParameterBuilder<T>.WithScopes(IEnumerable<String>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected T WithScopes (System.Collections.Generic.IEnumerable<string> scopes);
  - lang: fsharp
    values:
    - value: "member this.WithScopes : seq<string> -> 'T"
  - lang: vb
    values:
    - value: Protected Function WithScopes (scopes As IEnumerable(Of String)) As T
  monikers:
  - msal-dotnet-latest
  summary: >-
    Specifies which scopes to request. This method is used when your application needs

    to specify the scopes needed to call a protected API. See

    <see>https://docs.microsoft.com/azure/active-directory/develop/v2-permissions-and-consent</see> to learn

    more about scopes, permissions and consent, and

    <see>https://docs.microsoft.com/azure/active-directory/develop/msal-v1-app-scopes</see> to learn how

    to create scopes for legacy applications which used to expose OAuth2 permissions.
  metadata: {}
uid: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.WithScopes*
commentId: Overload:Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.WithScopes
namespace: Microsoft.Identity.Client
name: WithScopes
fullName: Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder<T>.WithScopes
nameWithType: AbstractAcquireTokenParameterBuilder<T>.WithScopes
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.WithScopes
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder`1.WithScopes
  - Microsoft::Identity::Client::AbstractAcquireTokenParameterBuilder`1::WithScopes
  - Microsoft.Identity.Client.AbstractAcquireTokenParameterBuilder.WithScopes
  - WithScopes
  - AbstractAcquireTokenParameterBuilder`1.WithScopes
  - AbstractAcquireTokenParameterBuilder`1::WithScopes
  helpviewer_keywords:
  - AbstractAcquireTokenParameterBuilder<T>.WithScopes method [.NET]
  - WithScopes method [.NET], class AbstractAcquireTokenParameterBuilder<T>
  - AbstractAcquireTokenParameterBuilder<T>.WithScopes(IEnumerable<String>) method [.NET]
  - WithScopes(IEnumerable<String>) method [.NET], class AbstractAcquireTokenParameterBuilder<T>
  monikers:
  - msal-dotnet-latest
