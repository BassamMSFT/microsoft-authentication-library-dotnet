### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: T
    description: The builder to chain the .With methods.
  parameters:
  - namesWithMoniker:
    - value: enableLegacyCacheCompatibility
    description: Enable legacy ADAL cache compatibility.
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLegacyCacheCompatibility(System.Boolean)
  commentId: M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLegacyCacheCompatibility(System.Boolean)
  name: WithLegacyCacheCompatibility(Boolean)
  fullName: Microsoft.Identity.Client.AbstractApplicationBuilder<T>.WithLegacyCacheCompatibility(Boolean)
  nameWithType: AbstractApplicationBuilder<T>.WithLegacyCacheCompatibility(Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public T WithLegacyCacheCompatibility (bool enableLegacyCacheCompatibility = true);
  - lang: fsharp
    values:
    - value: "member this.WithLegacyCacheCompatibility : bool -> 'T"
  - lang: vb
    values:
    - value: Public Function WithLegacyCacheCompatibility (Optional enableLegacyCacheCompatibility As Boolean = true) As T
  monikers:
  - msal-dotnet-latest
  summary: Enables legacy ADAL cache serialization and deserialization.
  remarks: <p>ADAL is a previous legacy generation of MSAL.NET authentication library. If you don't use <code data-dev-comment-type="c">.WithLegacyCacheCompatibility(false)</code>, then by default, the ADAL cache is used (along with MSAL cache). <code data-dev-comment-type="c">true</code> flag is only needed for specific migration scenarios from ADAL.NET to MSAL.NET when both library versions are running side-by-side. To improve performance add <code data-dev-comment-type="c">.WithLegacyCacheCompatibility(false)</code> unless you care about migration scenarios.</p>
  metadata: {}
uid: Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLegacyCacheCompatibility*
commentId: Overload:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLegacyCacheCompatibility
namespace: Microsoft.Identity.Client
name: WithLegacyCacheCompatibility
fullName: Microsoft.Identity.Client.AbstractApplicationBuilder<T>.WithLegacyCacheCompatibility
nameWithType: AbstractApplicationBuilder<T>.WithLegacyCacheCompatibility
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLegacyCacheCompatibility
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLegacyCacheCompatibility
  - Microsoft::Identity::Client::AbstractApplicationBuilder`1::WithLegacyCacheCompatibility
  - Microsoft.Identity.Client.AbstractApplicationBuilder.WithLegacyCacheCompatibility
  - WithLegacyCacheCompatibility
  - AbstractApplicationBuilder`1.WithLegacyCacheCompatibility
  - AbstractApplicationBuilder`1::WithLegacyCacheCompatibility
  helpviewer_keywords:
  - AbstractApplicationBuilder<T>.WithLegacyCacheCompatibility method [.NET]
  - WithLegacyCacheCompatibility method [.NET], class AbstractApplicationBuilder<T>
  - AbstractApplicationBuilder<T>.WithLegacyCacheCompatibility(Boolean) method [.NET]
  - WithLegacyCacheCompatibility(Boolean) method [.NET], class AbstractApplicationBuilder<T>
  monikers:
  - msal-dotnet-latest
