### YamlMime:NetType
type: interface
methods:
- uid: Microsoft.Identity.Client.Extensibility.ICustomWebUi.AcquireAuthorizationCodeAsync(System.Uri,System.Uri,System.Threading.CancellationToken)
  monikers:
  - msal-dotnet-latest
uid: Microsoft.Identity.Client.Extensibility.ICustomWebUi
commentId: T:Microsoft.Identity.Client.Extensibility.ICustomWebUi
namespace: Microsoft.Identity.Client.Extensibility
name: ICustomWebUi
fullName: Microsoft.Identity.Client.Extensibility.ICustomWebUi
nameWithType: Microsoft.Identity.Client.Extensibility.ICustomWebUi
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
syntaxWithMoniker:
- lang: csharp
  values:
  - value: public interface ICustomWebUi
- lang: fsharp
  values:
  - value: type ICustomWebUi = interface
- lang: vb
  values:
  - value: Public Interface ICustomWebUi
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
summary: >-
  Interface that an MSAL.NET extender can implement to provide their own web UI in public client applications

  to sign-in user and have them consented part of the Authorization code flow.

  MSAL.NET provides an embedded web view for Windows and Mac, but there are other scenarios not yet supported.

  This extensibility point enables them to provide such UI in a secure way
metadata:
  api_name:
  - Microsoft.Identity.Client.Extensibility.ICustomWebUi
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.Extensibility.ICustomWebUi
  - Microsoft::Identity::Client::Extensibility::ICustomWebUi
  - ICustomWebUi
  helpviewer_keywords:
  - Microsoft.Identity.Client.Extensibility.ICustomWebUi interface [.NET]
  monikers:
  - msal-dotnet-latest
