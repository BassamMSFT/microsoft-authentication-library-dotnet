### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: certificate
    description: A <xref data-throw-if-not-resolved="true" uid="System.Security.Cryptography.X509Certificates.X509Certificate2"></xref>
    type: <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2?alt=System.Security.Cryptography.X509Certificates.X509Certificate2&text=X509Certificate2" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: if 'certificate' is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  name: X509EncryptingCredentials(X509Certificate2)
  fullName: Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.X509EncryptingCredentials(X509Certificate2)
  nameWithType: X509EncryptingCredentials.X509EncryptingCredentials(X509Certificate2)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public X509EncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
  - lang: fsharp
    values:
    - value: 'new Microsoft.IdentityModel.Tokens.X509EncryptingCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 -> Microsoft.IdentityModel.Tokens.X509EncryptingCredentials'
  - lang: vb
    values:
    - value: Public Sub New (certificate As X509Certificate2)
  monikers:
  - msal-web-dotnet-latest
  summary: Designed to construct <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.EncryptingCredentials"></xref> based on a x509 certificate.
  remarks: <p><xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityAlgorithms.DefaultAsymmetricKeyWrapAlgorithm"></xref> will be used as the key wrap algorithm <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityAlgorithms.DefaultSymmetricEncryptionAlgorithm"></xref> will be used as the data encryption algorithm</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: certificate
    description: A <xref data-throw-if-not-resolved="true" uid="System.Security.Cryptography.X509Certificates.X509Certificate2"></xref>
    type: <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2?alt=System.Security.Cryptography.X509Certificates.X509Certificate2&text=X509Certificate2" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: keyWrapAlgorithm
    description: A key wrap algorithm
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: dataEncryptionAlgorithm
    description: Data encryption algorithm
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: if 'dataEncryptionAlgorithm' is null or empty.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String)
  commentId: M:Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String)
  name: X509EncryptingCredentials(X509Certificate2, String, String)
  fullName: Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.X509EncryptingCredentials(X509Certificate2, String, String)
  nameWithType: X509EncryptingCredentials.X509EncryptingCredentials(X509Certificate2, String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public X509EncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string keyWrapAlgorithm, string dataEncryptionAlgorithm);
  - lang: fsharp
    values:
    - value: 'new Microsoft.IdentityModel.Tokens.X509EncryptingCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * string * string -> Microsoft.IdentityModel.Tokens.X509EncryptingCredentials'
  - lang: vb
    values:
    - value: Public Sub New (certificate As X509Certificate2, keyWrapAlgorithm As String, dataEncryptionAlgorithm As String)
  monikers:
  - msal-web-dotnet-latest
  summary: Designed to construct <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.EncryptingCredentials"></xref> based on the x509 certificate, a key wrap algorithm, and data encryption algorithm.
  metadata: {}
uid: Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.#ctor*
commentId: Overload:Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.#ctor
namespace: Microsoft.IdentityModel.Tokens
name: X509EncryptingCredentials
fullName: Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.X509EncryptingCredentials
nameWithType: X509EncryptingCredentials.X509EncryptingCredentials
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Tokens.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Tokens v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Tokens.X509EncryptingCredentials..ctor
  api_location:
  - Microsoft.IdentityModel.Tokens.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Tokens.X509EncryptingCredentials.#ctor
  - Microsoft::IdentityModel::Tokens::X509EncryptingCredentials::#ctor
  - '#ctor'
  - X509EncryptingCredentials.#ctor
  - X509EncryptingCredentials::#ctor
  helpviewer_keywords:
  - X509EncryptingCredentials class [.NET], constructors
  - X509EncryptingCredentials(X509Certificate2) class [.NET], constructors
  - X509EncryptingCredentials(X509Certificate2, String, String) class [.NET], constructors
  monikers:
  - msal-web-dotnet-latest
