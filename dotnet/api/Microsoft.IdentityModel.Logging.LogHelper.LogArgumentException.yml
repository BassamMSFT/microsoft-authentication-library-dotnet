### YamlMime:NetMember
type: method
members:
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: message
    description: message to log.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String)
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String)
  name: LogArgumentException<T>(String, String)
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(String, String)
  nameWithType: LogHelper.LogArgumentException<T>(String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (string argumentName, string message) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : string * string -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, message As String) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  remarks: EventLevel is set to Error.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: eventLevel
    description: Identifies the level of an event to be logged.
    type: <xref href="System.Diagnostics.Tracing.EventLevel?alt=System.Diagnostics.Tracing.EventLevel&text=EventLevel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: message
    description: message to log.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String)
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String)
  name: LogArgumentException<T>(EventLevel, String, String)
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(EventLevel, String, String)
  nameWithType: LogHelper.LogArgumentException<T>(EventLevel, String, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, string message) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * string -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, message As String) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: innerException
    description: the inner <xref data-throw-if-not-resolved="true" uid="System.Exception"></xref> to be added to the outer exception.
    type: <xref href="System.Exception?alt=System.Exception&text=Exception" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: message
    description: message to log.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String)
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String)
  name: LogArgumentException<T>(String, Exception, String)
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(String, Exception, String)
  nameWithType: LogHelper.LogArgumentException<T>(String, Exception, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (string argumentName, Exception innerException, string message) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : string * Exception * string -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, innerException As Exception, message As String) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  remarks: EventLevel is set to Error.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: format
    description: Format string of the log message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: args
    description: An object array that contains zero or more objects to format.
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>[]
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String,System.Object[])
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String,System.Object[])
  name: LogArgumentException<T>(String, String, Object[])
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(String, String, Object[])
  nameWithType: LogHelper.LogArgumentException<T>(String, String, Object[])
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (string argumentName, string format, params object[] args) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : string * string * obj[] -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, format As String, ParamArray args As Object()) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  remarks: EventLevel is set to Error.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: eventLevel
    description: Identifies the level of an event to be logged.
    type: <xref href="System.Diagnostics.Tracing.EventLevel?alt=System.Diagnostics.Tracing.EventLevel&text=EventLevel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: innerException
    description: the inner <xref data-throw-if-not-resolved="true" uid="System.Exception"></xref> to be added to the outer exception.
    type: <xref href="System.Exception?alt=System.Exception&text=Exception" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: message
    description: message to log.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String)
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String)
  name: LogArgumentException<T>(EventLevel, String, Exception, String)
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(EventLevel, String, Exception, String)
  nameWithType: LogHelper.LogArgumentException<T>(EventLevel, String, Exception, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, Exception innerException, string message) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * Exception * string -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, innerException As Exception, message As String) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: eventLevel
    description: Identifies the level of an event to be logged.
    type: <xref href="System.Diagnostics.Tracing.EventLevel?alt=System.Diagnostics.Tracing.EventLevel&text=EventLevel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: format
    description: Format string of the log message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: args
    description: An object array that contains zero or more objects to format.
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>[]
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String,System.Object[])
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String,System.Object[])
  name: LogArgumentException<T>(EventLevel, String, String, Object[])
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(EventLevel, String, String, Object[])
  nameWithType: LogHelper.LogArgumentException<T>(EventLevel, String, String, Object[])
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, string format, params object[] args) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * string * obj[] -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, format As String, ParamArray args As Object()) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: innerException
    description: the inner <xref data-throw-if-not-resolved="true" uid="System.Exception"></xref> to be added to the outer exception.
    type: <xref href="System.Exception?alt=System.Exception&text=Exception" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: format
    description: Format string of the log message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: args
    description: An object array that contains zero or more objects to format.
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>[]
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String,System.Object[])
  name: LogArgumentException<T>(String, Exception, String, Object[])
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(String, Exception, String, Object[])
  nameWithType: LogHelper.LogArgumentException<T>(String, Exception, String, Object[])
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (string argumentName, Exception innerException, string format, params object[] args) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : string * Exception * string * obj[] -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (argumentName As String, innerException As Exception, format As String, ParamArray args As Object()) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  remarks: EventLevel is set to Error.
  metadata: {}
- typeParameters:
  - name: T
  returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: eventLevel
    description: Identifies the level of an event to be logged.
    type: <xref href="System.Diagnostics.Tracing.EventLevel?alt=System.Diagnostics.Tracing.EventLevel&text=EventLevel" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: argumentName
    description: Identifies the argument whose value generated the ArgumentException.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: innerException
    description: the inner <xref data-throw-if-not-resolved="true" uid="System.Exception"></xref> to be added to the outer exception.
    type: <xref href="System.Exception?alt=System.Exception&text=Exception" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: format
    description: Format string of the log message.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: args
    description: An object array that contains zero or more objects to format.
    type: <xref href="System.Object?alt=System.Object&text=Object" data-throw-if-not-resolved="True"/>[]
  type: method
  uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String,System.Object[])
  commentId: M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String,System.Object[])
  name: LogArgumentException<T>(EventLevel, String, Exception, String, Object[])
  fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException<T>(EventLevel, String, Exception, String, Object[])
  nameWithType: LogHelper.LogArgumentException<T>(EventLevel, String, Exception, String, Object[])
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: 'public static T LogArgumentException<T> (System.Diagnostics.Tracing.EventLevel eventLevel, string argumentName, Exception innerException, string format, params object[] args) where T : ArgumentException;'
  - lang: fsharp
    values:
    - value: "static member LogArgumentException : System.Diagnostics.Tracing.EventLevel * string * Exception * string * obj[] -> 'T (requires 'T :> ArgumentException)"
  - lang: vb
    values:
    - value: Public Shared Function LogArgumentException(Of T As ArgumentException) (eventLevel As EventLevel, argumentName As String, innerException As Exception, format As String, ParamArray args As Object()) As T
  monikers:
  - msal-web-dotnet-latest
  summary: Logs an argument exception using the event source logger and returns new typed exception.
  metadata: {}
uid: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException*
commentId: Overload:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException
namespace: Microsoft.IdentityModel.Logging
name: LogArgumentException
fullName: Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException
nameWithType: LogHelper.LogArgumentException
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Logging.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Logging v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException
  api_location:
  - Microsoft.IdentityModel.Logging.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException
  - Microsoft::IdentityModel::Logging::LogHelper::LogArgumentException
  - LogArgumentException
  - LogHelper.LogArgumentException
  - LogHelper::LogArgumentException
  - Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1
  - Microsoft::IdentityModel::Logging::LogHelper::LogArgumentException``1
  - LogArgumentException``1
  - LogHelper.LogArgumentException``1
  - LogHelper::LogArgumentException``1
  helpviewer_keywords:
  - LogHelper.LogArgumentException method [.NET]
  - LogArgumentException method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(String, String) method [.NET]
  - LogArgumentException<T>(String, String) method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(EventLevel, String, String) method [.NET]
  - LogArgumentException<T>(EventLevel, String, String) method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(String, Exception, String) method [.NET]
  - LogArgumentException<T>(String, Exception, String) method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(String, String, Object[]) method [.NET]
  - LogArgumentException<T>(String, String, Object[]) method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(EventLevel, String, Exception, String) method [.NET]
  - LogArgumentException<T>(EventLevel, String, Exception, String) method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(EventLevel, String, String, Object[]) method [.NET]
  - LogArgumentException<T>(EventLevel, String, String, Object[]) method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(String, Exception, String, Object[]) method [.NET]
  - LogArgumentException<T>(String, Exception, String, Object[]) method [.NET], class LogHelper
  - LogHelper.LogArgumentException<T>(EventLevel, String, Exception, String, Object[]) method [.NET]
  - LogArgumentException<T>(EventLevel, String, Exception, String, Object[]) method [.NET], class LogHelper
  monikers:
  - msal-web-dotnet-latest
