### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.IdentityModel.Tokens.SignatureProvider?alt=Microsoft.IdentityModel.Tokens.SignatureProvider&text=SignatureProvider" data-throw-if-not-resolved="True"/>
    description: A <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref> that can be used to validate a signature using the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref> and algorithm.
  parameters:
  - namesWithMoniker:
    - value: key
    description: The <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref> to use for signature verification.
    type: <xref href="Microsoft.IdentityModel.Tokens.SecurityKey?alt=Microsoft.IdentityModel.Tokens.SecurityKey&text=SecurityKey" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: algorithm
    description: The algorithm to use for verifying.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: thrown if <code data-dev-comment-type="paramref">algorithm</code> is null or empty.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: thrown if <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey.KeySize"></xref> is too small.
    type: <xref href="System.ArgumentOutOfRangeException" data-throw-if-not-resolved="True"/>
  - description: thrown if the key / algorithm is not supported.
    type: <xref href="System.NotSupportedException" data-throw-if-not-resolved="True"/>
  - description: thrown if <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.Create(System.String,System.Object[])"></xref> returns a type that is not assignable from <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref>.
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)
  commentId: M:Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)
  name: CreateForVerifying(SecurityKey, String)
  fullName: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying(SecurityKey, String)
  nameWithType: CryptoProviderFactory.CreateForVerifying(SecurityKey, String)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Microsoft.IdentityModel.Tokens.SignatureProvider CreateForVerifying (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm);
  - lang: fsharp
    values:
    - value: >-
        abstract member CreateForVerifying : Microsoft.IdentityModel.Tokens.SecurityKey * string -> Microsoft.IdentityModel.Tokens.SignatureProvider

        override this.CreateForVerifying : Microsoft.IdentityModel.Tokens.SecurityKey * string -> Microsoft.IdentityModel.Tokens.SignatureProvider
  - lang: vb
    values:
    - value: Public Overridable Function CreateForVerifying (key As SecurityKey, algorithm As String) As SignatureProvider
  monikers:
  - msal-web-dotnet-latest
  summary: Creates a <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref> that supports the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref> and algorithm.
  remarks: <p>When finished with the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref> call <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.CryptoProviderFactory.ReleaseSignatureProvider(Microsoft.IdentityModel.Tokens.SignatureProvider)"></xref>.</p><p>If <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider"></xref> is set and <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.IsSupportedAlgorithm(System.String,System.Object[])"></xref> returns true. <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.Create(System.String,System.Object[])"></xref> is called to obtain the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref>.</p>
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.IdentityModel.Tokens.SignatureProvider?alt=Microsoft.IdentityModel.Tokens.SignatureProvider&text=SignatureProvider" data-throw-if-not-resolved="True"/>
    description: A <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref> that can be used to validate a signature using the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref> and algorithm.
  parameters:
  - namesWithMoniker:
    - value: key
    description: The <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref> to use for signature verification.
    type: <xref href="Microsoft.IdentityModel.Tokens.SecurityKey?alt=Microsoft.IdentityModel.Tokens.SecurityKey&text=SecurityKey" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: algorithm
    description: The algorithm to use for verifying.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: cacheProvider
    description: should the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref> be cached.
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: thrown if <code data-dev-comment-type="paramref">algorithm</code> is null or empty.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: thrown if <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey.KeySize"></xref> is too small.
    type: <xref href="System.ArgumentOutOfRangeException" data-throw-if-not-resolved="True"/>
  - description: thrown if the key / algorithm is not supported.
    type: <xref href="System.NotSupportedException" data-throw-if-not-resolved="True"/>
  - description: thrown if <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.Create(System.String,System.Object[])"></xref> returns a type that is not assignable from <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref>.
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,System.Boolean)
  commentId: M:Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying(Microsoft.IdentityModel.Tokens.SecurityKey,System.String,System.Boolean)
  name: CreateForVerifying(SecurityKey, String, Boolean)
  fullName: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying(SecurityKey, String, Boolean)
  nameWithType: CryptoProviderFactory.CreateForVerifying(SecurityKey, String, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public virtual Microsoft.IdentityModel.Tokens.SignatureProvider CreateForVerifying (Microsoft.IdentityModel.Tokens.SecurityKey key, string algorithm, bool cacheProvider);
  - lang: fsharp
    values:
    - value: >-
        abstract member CreateForVerifying : Microsoft.IdentityModel.Tokens.SecurityKey * string * bool -> Microsoft.IdentityModel.Tokens.SignatureProvider

        override this.CreateForVerifying : Microsoft.IdentityModel.Tokens.SecurityKey * string * bool -> Microsoft.IdentityModel.Tokens.SignatureProvider
  - lang: vb
    values:
    - value: Public Overridable Function CreateForVerifying (key As SecurityKey, algorithm As String, cacheProvider As Boolean) As SignatureProvider
  monikers:
  - msal-web-dotnet-latest
  summary: Creates a <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref> that supports the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref> and algorithm.
  remarks: <p>When finished with the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref> call <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.CryptoProviderFactory.ReleaseSignatureProvider(Microsoft.IdentityModel.Tokens.SignatureProvider)"></xref>.</p><p>If <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CustomCryptoProvider"></xref> is set and <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.IsSupportedAlgorithm(System.String,System.Object[])"></xref> returns true. <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.ICryptoProvider.Create(System.String,System.Object[])"></xref> is called to obtain the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SignatureProvider"></xref>.</p>
  metadata: {}
uid: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying*
commentId: Overload:Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying
namespace: Microsoft.IdentityModel.Tokens
name: CreateForVerifying
fullName: Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying
nameWithType: CryptoProviderFactory.CreateForVerifying
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Tokens.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Tokens v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying
  api_location:
  - Microsoft.IdentityModel.Tokens.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForVerifying
  - Microsoft::IdentityModel::Tokens::CryptoProviderFactory::CreateForVerifying
  - CreateForVerifying
  - CryptoProviderFactory.CreateForVerifying
  - CryptoProviderFactory::CreateForVerifying
  helpviewer_keywords:
  - CryptoProviderFactory.CreateForVerifying method [.NET]
  - CreateForVerifying method [.NET], class CryptoProviderFactory
  - CryptoProviderFactory.CreateForVerifying(SecurityKey, String) method [.NET]
  - CreateForVerifying(SecurityKey, String) method [.NET], class CryptoProviderFactory
  - CryptoProviderFactory.CreateForVerifying(SecurityKey, String, Boolean) method [.NET]
  - CreateForVerifying(SecurityKey, String, Boolean) method [.NET], class CryptoProviderFactory
  monikers:
  - msal-web-dotnet-latest
