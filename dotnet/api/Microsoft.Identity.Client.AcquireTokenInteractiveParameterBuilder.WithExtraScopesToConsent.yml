### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder?alt=Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder&text=AcquireTokenInteractiveParameterBuilder" data-throw-if-not-resolved="True"/>
    description: The builder to chain the .With methods
  parameters:
  - namesWithMoniker:
    - value: extraScopesToConsent
    description: >-
      Scopes that you can request the end user to consent upfront,
                  in addition to the scopes for the protected Web API for which you want to acquire a security token.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent(System.Collections.Generic.IEnumerable{System.String})
  name: WithExtraScopesToConsent(IEnumerable<String>)
  fullName: Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent(IEnumerable<String>)
  nameWithType: AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent(IEnumerable<String>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder WithExtraScopesToConsent (System.Collections.Generic.IEnumerable<string> extraScopesToConsent);
  - lang: fsharp
    values:
    - value: 'member this.WithExtraScopesToConsent : seq<string> -> Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder'
  - lang: vb
    values:
    - value: Public Function WithExtraScopesToConsent (extraScopesToConsent As IEnumerable(Of String)) As AcquireTokenInteractiveParameterBuilder
  monikers:
  - msal-dotnet-latest
  metadata: {}
uid: Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent*
commentId: Overload:Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent
namespace: Microsoft.Identity.Client
name: WithExtraScopesToConsent
fullName: Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent
nameWithType: AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent
  - Microsoft::Identity::Client::AcquireTokenInteractiveParameterBuilder::WithExtraScopesToConsent
  - WithExtraScopesToConsent
  - AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent
  - AcquireTokenInteractiveParameterBuilder::WithExtraScopesToConsent
  helpviewer_keywords:
  - AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent method [.NET]
  - WithExtraScopesToConsent method [.NET], class AcquireTokenInteractiveParameterBuilder
  - AcquireTokenInteractiveParameterBuilder.WithExtraScopesToConsent(IEnumerable<String>) method [.NET]
  - WithExtraScopesToConsent(IEnumerable<String>) method [.NET], class AcquireTokenInteractiveParameterBuilder
  monikers:
  - msal-dotnet-latest
