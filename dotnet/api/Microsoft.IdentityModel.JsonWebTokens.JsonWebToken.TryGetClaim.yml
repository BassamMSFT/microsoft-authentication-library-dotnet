### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
    description: true if successful, false otherwise.
  parameters:
  - namesWithMoniker:
    - value: key
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: value
    type: <xref href="System.Security.Claims.Claim?alt=System.Security.Claims.Claim&text=Claim" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim(System.String,System.Security.Claims.Claim@)
  commentId: M:Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim(System.String,System.Security.Claims.Claim@)
  name: TryGetClaim(String, Claim)
  fullName: Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim(String, Claim)
  nameWithType: JsonWebToken.TryGetClaim(String, Claim)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public bool TryGetClaim (string key, out System.Security.Claims.Claim value);
  - lang: fsharp
    values:
    - value: 'member this.TryGetClaim : string * Claim -> bool'
  - lang: vb
    values:
    - value: Public Function TryGetClaim (key As String, ByRef value As Claim) As Boolean
  monikers:
  - msal-web-dotnet-latest
  summary: >-
    Try to get a <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim"></xref> representing the { key, 'value' } pair corresponding to the provided <code data-dev-comment-type="paramref">key</code>.

    The value is obtained from the Payload.
  remarks: <p>A <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim"></xref> requires each value to be represented as a string. If the value was not a string, then <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim.Type"></xref> contains the json type. <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.JsonWebTokens.JsonClaimValueTypes"></xref> and <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.ClaimValueTypes"></xref> to determine the json type.</p>
  metadata: {}
uid: Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim*
commentId: Overload:Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim
namespace: Microsoft.IdentityModel.JsonWebTokens
name: TryGetClaim
fullName: Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim
nameWithType: JsonWebToken.TryGetClaim
assembliesWithMoniker:
- value: Microsoft.IdentityModel.JsonWebTokens.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.JsonWebTokens v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim
  api_location:
  - Microsoft.IdentityModel.JsonWebTokens.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.TryGetClaim
  - Microsoft::IdentityModel::JsonWebTokens::JsonWebToken::TryGetClaim
  - TryGetClaim
  - JsonWebToken.TryGetClaim
  - JsonWebToken::TryGetClaim
  helpviewer_keywords:
  - JsonWebToken.TryGetClaim method [.NET]
  - TryGetClaim method [.NET], class JsonWebToken
  - JsonWebToken.TryGetClaim(String, Claim) method [.NET]
  - TryGetClaim(String, Claim) method [.NET], class JsonWebToken
  monikers:
  - msal-web-dotnet-latest
