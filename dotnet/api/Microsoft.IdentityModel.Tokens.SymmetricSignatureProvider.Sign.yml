### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Byte?alt=System.Byte&text=Byte" data-throw-if-not-resolved="True"/>[]
    description: Signed bytes
  parameters:
  - namesWithMoniker:
    - value: input
    description: The bytes to sign.
    type: <xref href="System.Byte?alt=System.Byte&text=Byte" data-throw-if-not-resolved="True"/>[]
  exceptions:
  - description: "'input' is null."
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: "'input.Length' == 0."
    type: <xref href="System.ArgumentException" data-throw-if-not-resolved="True"/>
  - description: <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Dispose(System.Boolean)"></xref> has been called.
    type: <xref href="System.ObjectDisposedException" data-throw-if-not-resolved="True"/>
  - description: <xref data-throw-if-not-resolved="true" uid="System.Security.Cryptography.KeyedHashAlgorithm"></xref> is null. This can occur if a derived type deletes it or does not create it.
    type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign(System.Byte[])
  commentId: M:Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign(System.Byte[])
  name: Sign(Byte[])
  fullName: Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign(Byte[])
  nameWithType: SymmetricSignatureProvider.Sign(Byte[])
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public override byte[] Sign (byte[] input);
  - lang: fsharp
    values:
    - value: 'override this.Sign : byte[] -> byte[]'
  - lang: vb
    values:
    - value: Public Overrides Function Sign (input As Byte()) As Byte()
  monikers:
  - msal-web-dotnet-latest
  summary: Produces a signature over the 'input' using the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SymmetricSecurityKey"></xref> and 'algorithm' passed to <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.#ctor(Microsoft.IdentityModel.Tokens.SecurityKey,System.String)"></xref>.
  remarks: Sign is thread safe.
  metadata: {}
uid: Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign*
commentId: Overload:Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign
namespace: Microsoft.IdentityModel.Tokens
name: Sign
fullName: Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign
nameWithType: SymmetricSignatureProvider.Sign
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Tokens.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Tokens v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign
  api_location:
  - Microsoft.IdentityModel.Tokens.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Tokens.SymmetricSignatureProvider.Sign
  - Microsoft::IdentityModel::Tokens::SymmetricSignatureProvider::Sign
  - Sign
  - SymmetricSignatureProvider.Sign
  - SymmetricSignatureProvider::Sign
  helpviewer_keywords:
  - SymmetricSignatureProvider.Sign method [.NET]
  - Sign method [.NET], class SymmetricSignatureProvider
  - SymmetricSignatureProvider.Sign(Byte[]) method [.NET]
  - Sign(Byte[]) method [.NET], class SymmetricSignatureProvider
  monikers:
  - msal-web-dotnet-latest
