### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.IdentityModel.Tokens.Jwt.JwtSecurityToken?alt=System.IdentityModel.Tokens.Jwt.JwtSecurityToken&text=JwtSecurityToken" data-throw-if-not-resolved="True"/>
    description: A <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtSecurityToken"></xref> that has the signature validated if token was signed.
  parameters:
  - namesWithMoniker:
    - value: token
    description: A JWS token.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: validationParameters
    description: <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.TokenValidationParameters"></xref> that contains signing keys.
    type: <xref href="Microsoft.IdentityModel.Tokens.TokenValidationParameters?alt=Microsoft.IdentityModel.Tokens.TokenValidationParameters&text=TokenValidationParameters" data-throw-if-not-resolved="True"/>
  exceptions:
  - description: If <code data-dev-comment-type="paramref">validationParameters</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  - description: If a signature is not found and <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.TokenValidationParameters.RequireSignedTokens"></xref> is true.
    type: <xref href="Microsoft.IdentityModel.Tokens.SecurityTokenValidationException?alt=Microsoft.IdentityModel.Tokens.SecurityTokenValidationException&text=SecurityTokenValidationException" data-throw-if-not-resolved="True"/>
  - description: >-
      If the <code data-dev-comment-type="paramref">token</code> has a key identifier and none of the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref>(s) provided result in a validated signature.

      This can indicate that a key refresh is required.
    type: <xref href="Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException?alt=Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException&text=SecurityTokenSignatureKeyNotFoundException" data-throw-if-not-resolved="True"/>
  - description: >-
      If the <code data-dev-comment-type="paramref">token</code> has a key identifier and none of the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref>(s) provided result in a validated signature as well as the token

      had validation errors or lifetime or issuer. This is not intended to be a signal to refresh keys.
    type: <xref href="Microsoft.IdentityModel.Tokens.SecurityTokenUnableToValidateException?alt=Microsoft.IdentityModel.Tokens.SecurityTokenUnableToValidateException&text=SecurityTokenUnableToValidateException" data-throw-if-not-resolved="True"/>
  - description: If after trying all the <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.SecurityKey"></xref>(s), none result in a validated signature AND the <code data-dev-comment-type="paramref">token</code> does not have a key identifier.
    type: <xref href="Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException?alt=Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException&text=SecurityTokenInvalidSignatureException" data-throw-if-not-resolved="True"/>
  type: method
  uid: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(System.String,Microsoft.IdentityModel.Tokens.TokenValidationParameters)
  commentId: M:System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(System.String,Microsoft.IdentityModel.Tokens.TokenValidationParameters)
  name: ValidateSignature(String, TokenValidationParameters)
  fullName: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String, TokenValidationParameters)
  nameWithType: JwtSecurityTokenHandler.ValidateSignature(String, TokenValidationParameters)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: protected virtual System.IdentityModel.Tokens.Jwt.JwtSecurityToken ValidateSignature (string token, Microsoft.IdentityModel.Tokens.TokenValidationParameters validationParameters);
  - lang: fsharp
    values:
    - value: >-
        abstract member ValidateSignature : string * Microsoft.IdentityModel.Tokens.TokenValidationParameters -> System.IdentityModel.Tokens.Jwt.JwtSecurityToken

        override this.ValidateSignature : string * Microsoft.IdentityModel.Tokens.TokenValidationParameters -> System.IdentityModel.Tokens.Jwt.JwtSecurityToken
  - lang: vb
    values:
    - value: Protected Overridable Function ValidateSignature (token As String, validationParameters As TokenValidationParameters) As JwtSecurityToken
  monikers:
  - msal-web-dotnet-latest
  summary: Validates that the signature, if found or required, is valid.
  remarks: <p>If the <code data-dev-comment-type="paramref">token</code> is signed, the signature is validated even if <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.TokenValidationParameters.RequireSignedTokens"></xref> is false.</p><p>If the <code data-dev-comment-type="paramref">token</code> signature is validated, then the <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningKey"></xref> will be set to the key that signed the 'token'.It is the responsibility of <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.TokenValidationParameters.SignatureValidator"></xref> to set the <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtSecurityToken.SigningKey"></xref></p>
  metadata: {}
uid: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature*
commentId: Overload:System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature
namespace: System.IdentityModel.Tokens.Jwt
name: ValidateSignature
fullName: System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature
nameWithType: JwtSecurityTokenHandler.ValidateSignature
assembliesWithMoniker:
- value: System.IdentityModel.Tokens.Jwt.dll
packagesWithMoniker:
- value: System.IdentityModel.Tokens.Jwt v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature
  api_location:
  - System.IdentityModel.Tokens.Jwt.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature
  - System::IdentityModel::Tokens::Jwt::JwtSecurityTokenHandler::ValidateSignature
  - ValidateSignature
  - JwtSecurityTokenHandler.ValidateSignature
  - JwtSecurityTokenHandler::ValidateSignature
  helpviewer_keywords:
  - JwtSecurityTokenHandler.ValidateSignature method [.NET]
  - ValidateSignature method [.NET], class JwtSecurityTokenHandler
  - JwtSecurityTokenHandler.ValidateSignature(String, TokenValidationParameters) method [.NET]
  - ValidateSignature(String, TokenValidationParameters) method [.NET], class JwtSecurityTokenHandler
  monikers:
  - msal-web-dotnet-latest
