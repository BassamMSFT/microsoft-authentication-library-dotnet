### YamlMime:NetMember
type: method
members:
- parameters:
  - namesWithMoniker:
    - value: beforeWrite
    description: Delegate set in order to prepare the cache serialization
    type: <xref href="System.Func`2?alt=System.Func&text=Func" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.TokenCacheNotificationArgs?alt=Microsoft.Identity.Client.TokenCacheNotificationArgs&text=TokenCacheNotificationArgs" data-throw-if-not-resolved="True"/>,<xref href="System.Threading.Tasks.Task?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync(System.Func{Microsoft.Identity.Client.TokenCacheNotificationArgs,System.Threading.Tasks.Task})
  commentId: M:Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync(System.Func{Microsoft.Identity.Client.TokenCacheNotificationArgs,System.Threading.Tasks.Task})
  name: SetBeforeWriteAsync(Func<TokenCacheNotificationArgs,Task>)
  fullName: Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync(Func<TokenCacheNotificationArgs,Task>)
  nameWithType: ITokenCache.SetBeforeWriteAsync(Func<TokenCacheNotificationArgs,Task>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void SetBeforeWriteAsync (Func<Microsoft.Identity.Client.TokenCacheNotificationArgs,System.Threading.Tasks.Task> beforeWrite);
  - lang: fsharp
    values:
    - value: 'abstract member SetBeforeWriteAsync : Func<Microsoft.Identity.Client.TokenCacheNotificationArgs, System.Threading.Tasks.Task> -> unit'
  - lang: vb
    values:
    - value: Public Sub SetBeforeWriteAsync (beforeWrite As Func(Of TokenCacheNotificationArgs, Task))
  monikers:
  - msal-dotnet-latest
  summary: >-
    Sets a delegate called before any library method writes to the cache. This gives an option to the delegate

    to reload the cache state from a row in database and lock that row. That database row can then be unlocked in the delegate

    registered with <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.ITokenCache.SetAfterAccess(Microsoft.Identity.Client.TokenCacheCallback)"></xref>

    This provides the same functionality as SetBeforeWrite but it provides for an async/task-based callback.
  metadata: {}
uid: Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync*
commentId: Overload:Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync
namespace: Microsoft.Identity.Client
name: SetBeforeWriteAsync
fullName: Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync
nameWithType: ITokenCache.SetBeforeWriteAsync
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.ITokenCache.SetBeforeWriteAsync
  - Microsoft::Identity::Client::ITokenCache::SetBeforeWriteAsync
  - SetBeforeWriteAsync
  - ITokenCache.SetBeforeWriteAsync
  - ITokenCache::SetBeforeWriteAsync
  helpviewer_keywords:
  - ITokenCache.SetBeforeWriteAsync method [.NET]
  - SetBeforeWriteAsync method [.NET], interface ITokenCache
  - ITokenCache.SetBeforeWriteAsync(Func<TokenCacheNotificationArgs,Task>) method [.NET]
  - SetBeforeWriteAsync(Func<TokenCacheNotificationArgs,Task>) method [.NET], interface ITokenCache
  monikers:
  - msal-dotnet-latest
