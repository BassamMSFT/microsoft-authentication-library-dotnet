### YamlMime:NetMember
type: constructor
members:
- parameters:
  - namesWithMoniker:
    - value: accessToken
    description: An access token that contains the 'cnf' claim.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: httpRequestData
    description: A structure that represents an outgoing http request.
    type: <xref href="Microsoft.IdentityModel.Protocols.HttpRequestData?alt=Microsoft.IdentityModel.Protocols.HttpRequestData&text=HttpRequestData" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: signingCredentials
    description: A security key and algorithm that will be used to sign the (Signed)HttpRequest.
    type: <xref href="Microsoft.IdentityModel.Tokens.SigningCredentials?alt=Microsoft.IdentityModel.Tokens.SigningCredentials&text=SigningCredentials" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.#ctor(System.String,Microsoft.IdentityModel.Protocols.HttpRequestData,Microsoft.IdentityModel.Tokens.SigningCredentials)
  commentId: M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.#ctor(System.String,Microsoft.IdentityModel.Protocols.HttpRequestData,Microsoft.IdentityModel.Tokens.SigningCredentials)
  name: SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials)
  fullName: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials)
  nameWithType: SignedHttpRequestDescriptor.SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public SignedHttpRequestDescriptor (string accessToken, Microsoft.IdentityModel.Protocols.HttpRequestData httpRequestData, Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials);
  - lang: fsharp
    values:
    - value: 'new Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor : string * Microsoft.IdentityModel.Protocols.HttpRequestData * Microsoft.IdentityModel.Tokens.SigningCredentials -> Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor'
  - lang: vb
    values:
    - value: Public Sub New (accessToken As String, httpRequestData As HttpRequestData, signingCredentials As SigningCredentials)
  monikers:
  - msal-web-dotnet-latest
  summary: Initializes a new instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor"></xref>.
  remarks: <p><code data-dev-comment-type="paramref">accessToken</code> has to contain the 'cnf' claim so that PoP key can be resolved on the validation side. https://datatracker.ietf.org/doc/html/rfc7800#section-3.1 Default <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.SignedHttpRequestCreationParameters"></xref> and <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Tokens.CallContext"></xref> will be created.</p>
  metadata: {}
- parameters:
  - namesWithMoniker:
    - value: accessToken
    description: An access token that contains the 'cnf' claim.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: httpRequestData
    description: A structure that represents an outgoing http request.
    type: <xref href="Microsoft.IdentityModel.Protocols.HttpRequestData?alt=Microsoft.IdentityModel.Protocols.HttpRequestData&text=HttpRequestData" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: signingCredentials
    description: A security key and algorithm that will be used to sign the (Signed)HttpRequest.
    type: <xref href="Microsoft.IdentityModel.Tokens.SigningCredentials?alt=Microsoft.IdentityModel.Tokens.SigningCredentials&text=SigningCredentials" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: signedHttpRequestCreationParameters
    description: A set of parameters required for creating a SignedHttpRequest.
    type: <xref href="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters?alt=Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters&text=SignedHttpRequestCreationParameters" data-throw-if-not-resolved="True"/>
  type: constructor
  uid: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.#ctor(System.String,Microsoft.IdentityModel.Protocols.HttpRequestData,Microsoft.IdentityModel.Tokens.SigningCredentials,Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters)
  commentId: M:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.#ctor(System.String,Microsoft.IdentityModel.Protocols.HttpRequestData,Microsoft.IdentityModel.Tokens.SigningCredentials,Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters)
  name: SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials, SignedHttpRequestCreationParameters)
  fullName: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials, SignedHttpRequestCreationParameters)
  nameWithType: SignedHttpRequestDescriptor.SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials, SignedHttpRequestCreationParameters)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public SignedHttpRequestDescriptor (string accessToken, Microsoft.IdentityModel.Protocols.HttpRequestData httpRequestData, Microsoft.IdentityModel.Tokens.SigningCredentials signingCredentials, Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters signedHttpRequestCreationParameters);
  - lang: fsharp
    values:
    - value: 'new Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor : string * Microsoft.IdentityModel.Protocols.HttpRequestData * Microsoft.IdentityModel.Tokens.SigningCredentials * Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestCreationParameters -> Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor'
  - lang: vb
    values:
    - value: Public Sub New (accessToken As String, httpRequestData As HttpRequestData, signingCredentials As SigningCredentials, signedHttpRequestCreationParameters As SignedHttpRequestCreationParameters)
  monikers:
  - msal-web-dotnet-latest
  summary: Initializes a new instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor"></xref>.
  remarks: <p><code data-dev-comment-type="paramref">accessToken</code> has to contain the 'cnf' claim so that PoP key can be resolved on the validation side. https://datatracker.ietf.org/doc/html/rfc7800#section-3.1</p>
  metadata: {}
uid: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.#ctor*
commentId: Overload:Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.#ctor
namespace: Microsoft.IdentityModel.Protocols.SignedHttpRequest
name: SignedHttpRequestDescriptor
fullName: Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.SignedHttpRequestDescriptor
nameWithType: SignedHttpRequestDescriptor.SignedHttpRequestDescriptor
assembliesWithMoniker:
- value: Microsoft.IdentityModel.Protocols.SignedHttpRequest.dll
packagesWithMoniker:
- value: Microsoft.IdentityModel.Protocols.SignedHttpRequest v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor..ctor
  api_location:
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.IdentityModel.Protocols.SignedHttpRequest.SignedHttpRequestDescriptor.#ctor
  - Microsoft::IdentityModel::Protocols::SignedHttpRequest::SignedHttpRequestDescriptor::#ctor
  - '#ctor'
  - SignedHttpRequestDescriptor.#ctor
  - SignedHttpRequestDescriptor::#ctor
  helpviewer_keywords:
  - SignedHttpRequestDescriptor class [.NET], constructors
  - SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials) class [.NET], constructors
  - SignedHttpRequestDescriptor(String, HttpRequestData, SigningCredentials, SignedHttpRequestCreationParameters) class [.NET], constructors
  monikers:
  - msal-web-dotnet-latest
