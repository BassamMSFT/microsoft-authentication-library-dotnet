### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: T
    description: The builder to chain the .With methods
  parameters:
  - namesWithMoniker:
    - value: identityLogger
    description: IdentityLogger
    type: <xref href="Microsoft.IdentityModel.Abstractions.IIdentityLogger?alt=Microsoft.IdentityModel.Abstractions.IIdentityLogger&text=IIdentityLogger" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: enablePiiLogging
    description: >-
      Boolean used to enable/disable logging of
                  Personally Identifiable Information (PII).
                  PII logs are never written to default outputs like Console, Logcat or NSLog
                  Default is set to <code data-dev-comment-type="c">false</code>, which ensures that your application is compliant with GDPR.
                  You can set it to <code data-dev-comment-type="c">true</code> for advanced debugging requiring PII
                  If both WithLogging apis are set, this one will override the other
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.IdentityModel.Abstractions.IIdentityLogger,System.Boolean)
  commentId: M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.IdentityModel.Abstractions.IIdentityLogger,System.Boolean)
  name: WithLogging(IIdentityLogger, Boolean)
  fullName: Microsoft.Identity.Client.AbstractApplicationBuilder<T>.WithLogging(IIdentityLogger, Boolean)
  nameWithType: AbstractApplicationBuilder<T>.WithLogging(IIdentityLogger, Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public T WithLogging (Microsoft.IdentityModel.Abstractions.IIdentityLogger identityLogger, bool enablePiiLogging = false);
  - lang: fsharp
    values:
    - value: "member this.WithLogging : Microsoft.IdentityModel.Abstractions.IIdentityLogger * bool -> 'T"
  - lang: vb
    values:
    - value: Public Function WithLogging (identityLogger As IIdentityLogger, Optional enablePiiLogging As Boolean = false) As T
  monikers:
  - msal-dotnet-latest
  summary: Sets the Identity Logger. For details see https://aka.ms/msal-net-logging
  remarks: This is an experimental API. The method signature may change in the future without involving a major version upgrade.
  metadata: {}
- returnsWithMoniker:
    type:
    - value: T
    description: The builder to chain the .With methods
  parameters:
  - namesWithMoniker:
    - value: loggingCallback
    type: <xref href="Microsoft.Identity.Client.LogCallback?alt=Microsoft.Identity.Client.LogCallback&text=LogCallback" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: logLevel
    description: Desired level of logging.  The default is LogLevel.Info
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.LogLevel?alt=Microsoft.Identity.Client.LogLevel&text=LogLevel" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: enablePiiLogging
    description: >-
      Boolean used to enable/disable logging of
                  Personally Identifiable Information (PII).
                  PII logs are never written to default outputs like Console, Logcat or NSLog
                  Default is set to <code data-dev-comment-type="c">false</code>, which ensures that your application is compliant with GDPR.
                  You can set it to <code data-dev-comment-type="c">true</code> for advanced debugging requiring PII
                  If both WithLogging apis are set, the other one will overide the this one
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: enableDefaultPlatformLogging
    description: >-
      Flag to enable/disable logging to platform defaults.
                  In Desktop/UWP, Event Tracing is used. In iOS, NSLog is used.
                  In android, Logcat is used. The default value is <code data-dev-comment-type="c">false</code>
    type: <xref href="System.Nullable`1?alt=System.Nullable&text=Nullable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>&gt;
  exceptions:
  - type: <xref href="System.InvalidOperationException" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.Identity.Client.LogCallback,System.Nullable{Microsoft.Identity.Client.LogLevel},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging(Microsoft.Identity.Client.LogCallback,System.Nullable{Microsoft.Identity.Client.LogLevel},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name: WithLogging(LogCallback, Nullable<LogLevel>, Nullable<Boolean>, Nullable<Boolean>)
  fullName: Microsoft.Identity.Client.AbstractApplicationBuilder<T>.WithLogging(LogCallback, Nullable<LogLevel>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType: AbstractApplicationBuilder<T>.WithLogging(LogCallback, Nullable<LogLevel>, Nullable<Boolean>, Nullable<Boolean>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public T WithLogging (Microsoft.Identity.Client.LogCallback loggingCallback, Microsoft.Identity.Client.LogLevel? logLevel = default, bool? enablePiiLogging = default, bool? enableDefaultPlatformLogging = default);
  - lang: fsharp
    values:
    - value: "member this.WithLogging : Microsoft.Identity.Client.LogCallback * Nullable<Microsoft.Identity.Client.LogLevel> * Nullable<bool> * Nullable<bool> -> 'T"
  - lang: vb
    values:
    - value: Public Function WithLogging (loggingCallback As LogCallback, Optional logLevel As Nullable(Of LogLevel) = Nothing, Optional enablePiiLogging As Nullable(Of Boolean) = Nothing, Optional enableDefaultPlatformLogging As Nullable(Of Boolean) = Nothing) As T
  monikers:
  - msal-dotnet-latest
  summary: Sets the logging callback. For details see https://aka.ms/msal-net-logging
  metadata: {}
uid: Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging*
commentId: Overload:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging
namespace: Microsoft.Identity.Client
name: WithLogging
fullName: Microsoft.Identity.Client.AbstractApplicationBuilder<T>.WithLogging
nameWithType: AbstractApplicationBuilder<T>.WithLogging
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithLogging
  - Microsoft::Identity::Client::AbstractApplicationBuilder`1::WithLogging
  - Microsoft.Identity.Client.AbstractApplicationBuilder.WithLogging
  - WithLogging
  - AbstractApplicationBuilder`1.WithLogging
  - AbstractApplicationBuilder`1::WithLogging
  helpviewer_keywords:
  - AbstractApplicationBuilder<T>.WithLogging method [.NET]
  - WithLogging method [.NET], class AbstractApplicationBuilder<T>
  - AbstractApplicationBuilder<T>.WithLogging(IIdentityLogger, Boolean) method [.NET]
  - WithLogging(IIdentityLogger, Boolean) method [.NET], class AbstractApplicationBuilder<T>
  - AbstractApplicationBuilder<T>.WithLogging(LogCallback, Nullable<LogLevel>, Nullable<Boolean>, Nullable<Boolean>) method [.NET]
  - WithLogging(LogCallback, Nullable<LogLevel>, Nullable<Boolean>, Nullable<Boolean>) method [.NET], class AbstractApplicationBuilder<T>
  monikers:
  - msal-dotnet-latest
