### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: T
  parameters:
  - namesWithMoniker:
    - value: options
    description: Options for the internal MSAL token caches.
    type: <xref href="Microsoft.Identity.Client.CacheOptions?alt=Microsoft.Identity.Client.CacheOptions&text=CacheOptions" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithCacheOptions(Microsoft.Identity.Client.CacheOptions)
  commentId: M:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithCacheOptions(Microsoft.Identity.Client.CacheOptions)
  name: WithCacheOptions(CacheOptions)
  fullName: Microsoft.Identity.Client.AbstractApplicationBuilder<T>.WithCacheOptions(CacheOptions)
  nameWithType: AbstractApplicationBuilder<T>.WithCacheOptions(CacheOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public T WithCacheOptions (Microsoft.Identity.Client.CacheOptions options);
  - lang: fsharp
    values:
    - value: "member this.WithCacheOptions : Microsoft.Identity.Client.CacheOptions -> 'T"
  - lang: vb
    values:
    - value: Public Function WithCacheOptions (options As CacheOptions) As T
  monikers:
  - msal-dotnet-latest
  summary: >-
    Options for MSAL token caches. 


    MSAL maintains a token cache internally in memory. By default, this cache object is part of each instance of <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.PublicClientApplication"></xref> or <xref data-throw-if-not-resolved="true" uid="Microsoft.Identity.Client.ConfidentialClientApplication"></xref>.

    This method allows customization of the in-memory token cache of MSAL. 


    MSAL's memory cache is different than token cache serialization. Cache serialization pulls the tokens from a cache (e.g. Redis, Cosmos, or a file on disk), 

    where they are stored in JSON format, into MSAL's internal memory cache. Memory cache operations do not involve JSON operations. 


    External cache serialization remains the recommended way to handle desktop apps, web site and web APIs, as it provides persistence. These options

    do not currently control external cache serialization.


    Detailed guidance for each application type and platform:

    https://aka.ms/msal-net-token-cache-serialization
  metadata: {}
uid: Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithCacheOptions*
commentId: Overload:Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithCacheOptions
namespace: Microsoft.Identity.Client
name: WithCacheOptions
fullName: Microsoft.Identity.Client.AbstractApplicationBuilder<T>.WithCacheOptions
nameWithType: AbstractApplicationBuilder<T>.WithCacheOptions
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithCacheOptions
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.AbstractApplicationBuilder`1.WithCacheOptions
  - Microsoft::Identity::Client::AbstractApplicationBuilder`1::WithCacheOptions
  - Microsoft.Identity.Client.AbstractApplicationBuilder.WithCacheOptions
  - WithCacheOptions
  - AbstractApplicationBuilder`1.WithCacheOptions
  - AbstractApplicationBuilder`1::WithCacheOptions
  helpviewer_keywords:
  - AbstractApplicationBuilder<T>.WithCacheOptions method [.NET]
  - WithCacheOptions method [.NET], class AbstractApplicationBuilder<T>
  - AbstractApplicationBuilder<T>.WithCacheOptions(CacheOptions) method [.NET]
  - WithCacheOptions(CacheOptions) method [.NET], class AbstractApplicationBuilder<T>
  monikers:
  - msal-dotnet-latest
