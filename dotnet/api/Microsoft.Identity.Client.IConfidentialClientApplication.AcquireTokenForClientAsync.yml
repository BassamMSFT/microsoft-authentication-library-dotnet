### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.AuthenticationResult?alt=Microsoft.Identity.Client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="True"/>&gt;
    description: Authentication result containing application token for the requested scopes
  parameters:
  - namesWithMoniker:
    - value: scopes
    description: Array of scopes requested for resource
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync(System.Collections.Generic.IEnumerable{System.String})
  name: AcquireTokenForClientAsync(IEnumerable<String>)
  fullName: Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync(IEnumerable<String>)
  nameWithType: IConfidentialClientApplication.AcquireTokenForClientAsync(IEnumerable<String>)
  attributesWithMoniker:
  - value: System.ObsoleteAttribute
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: >-
        [System.Obsolete("Use AcquireTokenForClient instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)]

        public System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult> AcquireTokenForClientAsync (System.Collections.Generic.IEnumerable<string> scopes);
  - lang: fsharp
    values:
    - value: >-
        [<System.Obsolete("Use AcquireTokenForClient instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)>]

        abstract member AcquireTokenForClientAsync : seq<string> -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>
  - lang: vb
    values:
    - value: Public Function AcquireTokenForClientAsync (scopes As IEnumerable(Of String)) As Task(Of AuthenticationResult)
  monikers:
  - msal-dotnet-latest
  obsoleteMessagesWithMoniker:
  - value: 'Use AcquireTokenForClient instead. See https://aka.ms/msal-net-3-breaking-changes. '
  summary: '[V2 API] Acquires token from the service for the confidential client. This method attempts to look up valid access token in the cache.'
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.AuthenticationResult?alt=Microsoft.Identity.Client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="True"/>&gt;
    description: Authentication result containing application token for the requested scopes
  parameters:
  - namesWithMoniker:
    - value: scopes
    description: Array of scopes requested for resource
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: forceRefresh
    description: If TRUE, API will ignore the access token in the cache and attempt to acquire new access token using client credentials
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  commentId: M:Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: AcquireTokenForClientAsync(IEnumerable<String>, Boolean)
  fullName: Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync(IEnumerable<String>, Boolean)
  nameWithType: IConfidentialClientApplication.AcquireTokenForClientAsync(IEnumerable<String>, Boolean)
  attributesWithMoniker:
  - value: System.ObsoleteAttribute
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: >-
        [System.Obsolete("Use AcquireTokenForClient instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)]

        public System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult> AcquireTokenForClientAsync (System.Collections.Generic.IEnumerable<string> scopes, bool forceRefresh);
  - lang: fsharp
    values:
    - value: >-
        [<System.Obsolete("Use AcquireTokenForClient instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)>]

        abstract member AcquireTokenForClientAsync : seq<string> * bool -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>
  - lang: vb
    values:
    - value: Public Function AcquireTokenForClientAsync (scopes As IEnumerable(Of String), forceRefresh As Boolean) As Task(Of AuthenticationResult)
  monikers:
  - msal-dotnet-latest
  obsoleteMessagesWithMoniker:
  - value: 'Use AcquireTokenForClient instead. See https://aka.ms/msal-net-3-breaking-changes. '
  summary: '[V2 API] Acquires token from the service for the confidential client. This method attempts to look up valid access token in the cache.'
  metadata: {}
uid: Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync*
commentId: Overload:Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync
namespace: Microsoft.Identity.Client
name: AcquireTokenForClientAsync
fullName: Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync
nameWithType: IConfidentialClientApplication.AcquireTokenForClientAsync
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.IConfidentialClientApplication.AcquireTokenForClientAsync
  - Microsoft::Identity::Client::IConfidentialClientApplication::AcquireTokenForClientAsync
  - AcquireTokenForClientAsync
  - IConfidentialClientApplication.AcquireTokenForClientAsync
  - IConfidentialClientApplication::AcquireTokenForClientAsync
  helpviewer_keywords:
  - IConfidentialClientApplication.AcquireTokenForClientAsync method [.NET]
  - AcquireTokenForClientAsync method [.NET], interface IConfidentialClientApplication
  - IConfidentialClientApplication.AcquireTokenForClientAsync(IEnumerable<String>) method [.NET]
  - AcquireTokenForClientAsync(IEnumerable<String>) method [.NET], interface IConfidentialClientApplication
  - IConfidentialClientApplication.AcquireTokenForClientAsync(IEnumerable<String>, Boolean) method [.NET]
  - AcquireTokenForClientAsync(IEnumerable<String>, Boolean) method [.NET], interface IConfidentialClientApplication
  monikers:
  - msal-dotnet-latest
