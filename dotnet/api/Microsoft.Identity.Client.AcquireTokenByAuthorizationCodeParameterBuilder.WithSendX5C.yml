### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder?alt=Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder&text=AcquireTokenByAuthorizationCodeParameterBuilder" data-throw-if-not-resolved="True"/>
    description: The builder to chain the .With methods
  parameters:
  - namesWithMoniker:
    - value: withSendX5C
    description: >-
      <code data-dev-comment-type="c">true</code> if the x5c should be sent. Otherwise <code data-dev-comment-type="c">false</code>.
        The default is <code data-dev-comment-type="c">false</code>
    type: <xref href="System.Boolean?alt=System.Boolean&text=Boolean" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C(System.Boolean)
  commentId: M:Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C(System.Boolean)
  name: WithSendX5C(Boolean)
  fullName: Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C(Boolean)
  nameWithType: AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C(Boolean)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder WithSendX5C (bool withSendX5C);
  - lang: fsharp
    values:
    - value: 'member this.WithSendX5C : bool -> Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder'
  - lang: vb
    values:
    - value: Public Function WithSendX5C (withSendX5C As Boolean) As AcquireTokenByAuthorizationCodeParameterBuilder
  monikers:
  - msal-dotnet-latest
  summary: >-
    Applicable to first-party applications only, this method also allows to specify 

    if the <a href="https://datatracker.ietf.org/doc/html/rfc7517#section-4.7">x5c claim</a> should be sent to Azure AD.

    Sending the x5c enables application developers to achieve easy certificate roll-over in Azure AD:

    this method will send the certificate chain to Azure AD along with the token request,

    so that Azure AD can use it to validate the subject name based on a trusted issuer policy.

    This saves the application admin from the need to explicitly manage the certificate rollover

    (either via portal or PowerShell/CLI operation). For details see https://aka.ms/msal-net-sni
  metadata: {}
uid: Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C*
commentId: Overload:Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C
namespace: Microsoft.Identity.Client
name: WithSendX5C
fullName: Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C
nameWithType: AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C
  - Microsoft::Identity::Client::AcquireTokenByAuthorizationCodeParameterBuilder::WithSendX5C
  - WithSendX5C
  - AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C
  - AcquireTokenByAuthorizationCodeParameterBuilder::WithSendX5C
  helpviewer_keywords:
  - AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C method [.NET]
  - WithSendX5C method [.NET], class AcquireTokenByAuthorizationCodeParameterBuilder
  - AcquireTokenByAuthorizationCodeParameterBuilder.WithSendX5C(Boolean) method [.NET]
  - WithSendX5C(Boolean) method [.NET], class AcquireTokenByAuthorizationCodeParameterBuilder
  monikers:
  - msal-dotnet-latest
