### YamlMime:NetMember
type: method
members:
- parameters:
  - namesWithMoniker:
    - value: claims
    description: For each <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim"></xref> a JSON pair { 'Claim.Type', 'Claim.Value' } is added. If duplicate claims are found then a { 'Claim.Type', List&lt;object&gt; } will be created to contain the duplicate values.
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.Security.Claims.Claim?alt=System.Security.Claims.Claim&text=Claim" data-throw-if-not-resolved="True"/>&gt;
  exceptions:
  - description: <code data-dev-comment-type="paramref">claims</code> is null.
    type: <xref href="System.ArgumentNullException" data-throw-if-not-resolved="True"/>
  type: method
  uid: System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  name: AddClaims(IEnumerable<Claim>)
  fullName: System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims(IEnumerable<Claim>)
  nameWithType: JwtPayload.AddClaims(IEnumerable<Claim>)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public void AddClaims (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
  - lang: fsharp
    values:
    - value: 'member this.AddClaims : seq<System.Security.Claims.Claim> -> unit'
  - lang: vb
    values:
    - value: Public Sub AddClaims (claims As IEnumerable(Of Claim))
  monikers:
  - msal-web-dotnet-latest
  summary: Adds a number of <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim"></xref> to the <xref data-throw-if-not-resolved="true" uid="System.IdentityModel.Tokens.Jwt.JwtPayload"></xref> as JSON { name, value } pairs.
  remarks: <p>Any <xref data-throw-if-not-resolved="true" uid="System.Security.Claims.Claim"></xref> in the <xref data-throw-if-not-resolved="true" uid="System.Collections.Generic.IEnumerable`1"></xref> that is null, will be ignored.</p>
  metadata: {}
uid: System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims*
commentId: Overload:System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims
namespace: System.IdentityModel.Tokens.Jwt
name: AddClaims
fullName: System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims
nameWithType: JwtPayload.AddClaims
assembliesWithMoniker:
- value: System.IdentityModel.Tokens.Jwt.dll
packagesWithMoniker:
- value: System.IdentityModel.Tokens.Jwt v6.25.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-web-dotnet-latest
metadata:
  api_name:
  - System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims
  api_location:
  - System.IdentityModel.Tokens.Jwt.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - System.IdentityModel.Tokens.Jwt.JwtPayload.AddClaims
  - System::IdentityModel::Tokens::Jwt::JwtPayload::AddClaims
  - AddClaims
  - JwtPayload.AddClaims
  - JwtPayload::AddClaims
  helpviewer_keywords:
  - JwtPayload.AddClaims method [.NET]
  - AddClaims method [.NET], class JwtPayload
  - JwtPayload.AddClaims(IEnumerable<Claim>) method [.NET]
  - AddClaims(IEnumerable<Claim>) method [.NET], class JwtPayload
  monikers:
  - msal-web-dotnet-latest
