### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.AuthenticationResult?alt=Microsoft.Identity.Client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="True"/>&gt;
    description: Authentication result containing a token for the requested scopes and for the currently signed-in user in Windows
  parameters:
  - namesWithMoniker:
    - value: scopes
    description: Scopes requested to access a protected API
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  type: method
  uid: Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(System.Collections.Generic.IEnumerable{System.String})
  name: AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>)
  fullName: Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>)
  nameWithType: IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>)
  attributesWithMoniker:
  - value: System.ObsoleteAttribute
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: >-
        [System.Obsolete("Use AcquireTokenByIntegratedWindowsAuth instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)]

        public System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult> AcquireTokenByIntegratedWindowsAuthAsync (System.Collections.Generic.IEnumerable<string> scopes);
  - lang: fsharp
    values:
    - value: >-
        [<System.Obsolete("Use AcquireTokenByIntegratedWindowsAuth instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)>]

        abstract member AcquireTokenByIntegratedWindowsAuthAsync : seq<string> -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>
  - lang: vb
    values:
    - value: Public Function AcquireTokenByIntegratedWindowsAuthAsync (scopes As IEnumerable(Of String)) As Task(Of AuthenticationResult)
  monikers:
  - msal-dotnet-latest
  obsoleteMessagesWithMoniker:
  - value: 'Use AcquireTokenByIntegratedWindowsAuth instead. See https://aka.ms/msal-net-3-breaking-changes. '
  summary: >-
    Non-interactive request to acquire a security token for the signed-in user in Windows, via Integrated Windows Authentication.

    See https://aka.ms/msal-net-iwa.

    The account used in this overrides is pulled from the operating system as the current user principal name
  remarks: '<p>On Windows Universal Platform, the following capabilities need to be provided: Enterprise Authentication, Private Networks (Client and Server), User Account Information</p>'
  metadata: {}
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="Microsoft.Identity.Client.AuthenticationResult?alt=Microsoft.Identity.Client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="True"/>&gt;
    description: Authentication result containing a token for the requested scopes and for the currently signed-in user in Windows
  parameters:
  - namesWithMoniker:
    - value: scopes
    description: Scopes requested to access a protected API
    type: <xref href="System.Collections.Generic.IEnumerable`1?alt=System.Collections.Generic.IEnumerable&text=IEnumerable" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
  - namesWithMoniker:
    - value: username
    description: >-
      Identifier of the user account for which to acquire a token with Integrated Windows authentication.
                  Generally in UserPrincipalName (UPN) format, e.g. john.doe@contoso.com
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(System.Collections.Generic.IEnumerable{System.String},System.String)
  name: AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>, String)
  fullName: Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>, String)
  nameWithType: IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>, String)
  attributesWithMoniker:
  - value: System.ObsoleteAttribute
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: >-
        [System.Obsolete("Use AcquireTokenByIntegratedWindowsAuth instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)]

        public System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult> AcquireTokenByIntegratedWindowsAuthAsync (System.Collections.Generic.IEnumerable<string> scopes, string username);
  - lang: fsharp
    values:
    - value: >-
        [<System.Obsolete("Use AcquireTokenByIntegratedWindowsAuth instead. See https://aka.ms/msal-net-3-breaking-changes. ", true)>]

        abstract member AcquireTokenByIntegratedWindowsAuthAsync : seq<string> * string -> System.Threading.Tasks.Task<Microsoft.Identity.Client.AuthenticationResult>
  - lang: vb
    values:
    - value: Public Function AcquireTokenByIntegratedWindowsAuthAsync (scopes As IEnumerable(Of String), username As String) As Task(Of AuthenticationResult)
  monikers:
  - msal-dotnet-latest
  obsoleteMessagesWithMoniker:
  - value: 'Use AcquireTokenByIntegratedWindowsAuth instead. See https://aka.ms/msal-net-3-breaking-changes. '
  summary: >-
    Non-interactive request to acquire a security token for the signed-in user in Windows, via Integrated Windows Authentication.

    See https://aka.ms/msal-net-iwa.

    The account used in this overrides is pulled from the operating system as the current user principal name
  metadata: {}
uid: Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync*
commentId: Overload:Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync
namespace: Microsoft.Identity.Client
name: AcquireTokenByIntegratedWindowsAuthAsync
fullName: Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync
nameWithType: IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync
assembliesWithMoniker:
- value: Microsoft.Identity.Client.dll
packagesWithMoniker:
- value: Microsoft.Identity.Client v4.49.1
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync
  api_location:
  - Microsoft.Identity.Client.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Client.IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync
  - Microsoft::Identity::Client::IPublicClientApplication::AcquireTokenByIntegratedWindowsAuthAsync
  - AcquireTokenByIntegratedWindowsAuthAsync
  - IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync
  - IPublicClientApplication::AcquireTokenByIntegratedWindowsAuthAsync
  helpviewer_keywords:
  - IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync method [.NET]
  - AcquireTokenByIntegratedWindowsAuthAsync method [.NET], interface IPublicClientApplication
  - IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>) method [.NET]
  - AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>) method [.NET], interface IPublicClientApplication
  - IPublicClientApplication.AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>, String) method [.NET]
  - AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable<String>, String) method [.NET], interface IPublicClientApplication
  monikers:
  - msal-dotnet-latest
