### YamlMime:NetMember
type: method
members:
- returnsWithMoniker:
    type:
    - value: <xref href="System.Threading.Tasks.Task`1?alt=System.Threading.Tasks.Task&text=Task" data-throw-if-not-resolved="True"/>&lt;<xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>&gt;
    description: An access token for the app itself, based on its scopes.
  parameters:
  - namesWithMoniker:
    - value: scope
    description: >-
      The scope requested to access a protected API. For this flow (client credentials), the scope
                  should be of the form "{ResourceIdUri/.default}" for instance <code data-dev-comment-type="c">https://management.azure.net/.default</code> or, for Microsoft
                  Graph, <code data-dev-comment-type="c">https://graph.microsoft.com/.default</code> as the requested scopes are defined statically with the application registration
                  in the portal, cannot be overridden in the application, as you can request a token for only one resource at a time (use
                  several calls to get tokens for other resources).
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: authenticationScheme
    description: >-
      Authentication scheme. If null, will use OpenIdConnectDefault.AuthenticationScheme
                  if called from a web app, and JwtBearerDefault.AuthenticationScheme if called from a web API.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tenant
    description: >-
      Enables overriding of the tenant/account for the same identity. This is useful in the
                  cases where a given account is a guest in other tenants, and you want to acquire tokens for a specific tenant.
    type: <xref href="System.String?alt=System.String&text=String" data-throw-if-not-resolved="True"/>
  - namesWithMoniker:
    - value: tokenAcquisitionOptions
    description: Options passed-in to create the token acquisition object which calls into MSAL .NET.
    type: <xref href="Microsoft.Identity.Web.TokenAcquisitionOptions?alt=Microsoft.Identity.Web.TokenAcquisitionOptions&text=TokenAcquisitionOptions" data-throw-if-not-resolved="True"/>
  implementsWithMoniker:
  - value: <xref href="Microsoft.Identity.Web.ITokenAcquisition.GetAccessTokenForAppAsync(System.String,System.String,System.String,Microsoft.Identity.Web.TokenAcquisitionOptions)?alt=Microsoft.Identity.Web.ITokenAcquisition.GetAccessTokenForAppAsync(System.String,System.String,System.String,Microsoft.Identity.Web.TokenAcquisitionOptions)&text=GetAccessTokenForAppAsync(String%2C+String%2C+String%2C+TokenAcquisitionOptions)" data-throw-if-not-resolved="True"/>
  type: method
  uid: Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync(System.String,System.String,System.String,Microsoft.Identity.Web.TokenAcquisitionOptions)
  commentId: M:Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync(System.String,System.String,System.String,Microsoft.Identity.Web.TokenAcquisitionOptions)
  name: GetAccessTokenForAppAsync(String, String, String, TokenAcquisitionOptions)
  fullName: Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync(String, String, String, TokenAcquisitionOptions)
  nameWithType: AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync(String, String, String, TokenAcquisitionOptions)
  syntaxWithMoniker:
  - lang: csharp
    values:
    - value: public System.Threading.Tasks.Task<string> GetAccessTokenForAppAsync (string scope, string? authenticationScheme = default, string? tenant = default, Microsoft.Identity.Web.TokenAcquisitionOptions? tokenAcquisitionOptions = default);
  - lang: fsharp
    values:
    - value: >-
        abstract member GetAccessTokenForAppAsync : string * string * string * Microsoft.Identity.Web.TokenAcquisitionOptions -> System.Threading.Tasks.Task<string>

        override this.GetAccessTokenForAppAsync : string * string * string * Microsoft.Identity.Web.TokenAcquisitionOptions -> System.Threading.Tasks.Task<string>
  - lang: vb
    values:
    - value: Public Function GetAccessTokenForAppAsync (scope As String, Optional authenticationScheme As String = Nothing, Optional tenant As String = Nothing, Optional tokenAcquisitionOptions As TokenAcquisitionOptions = Nothing) As Task(Of String)
  monikers:
  - msal-model-dotnet-latest
  summary: >-
    Acquires a token from the authority configured in the app, for the confidential client itself (not on behalf of a user)

    using the client credentials flow. See https://aka.ms/msal-net-client-credentials.
  metadata: {}
uid: Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync*
commentId: Overload:Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync
namespace: Microsoft.Identity.Web
name: GetAccessTokenForAppAsync
fullName: Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync
nameWithType: AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync
assembliesWithMoniker:
- value: Microsoft.Identity.Web.dll
packagesWithMoniker:
- value: Microsoft.Identity.Web v1.25.10
devLangs:
- csharp
- vb
- fsharp
monikers:
- msal-model-dotnet-latest
metadata:
  api_name:
  - Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync
  api_location:
  - Microsoft.Identity.Web.dll
  topic_type:
  - apiref
  api_type:
  - Assembly
  f1_keywords:
  - Microsoft.Identity.Web.AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync
  - Microsoft::Identity::Web::AppServicesAuthenticationTokenAcquisition::GetAccessTokenForAppAsync
  - GetAccessTokenForAppAsync
  - AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync
  - AppServicesAuthenticationTokenAcquisition::GetAccessTokenForAppAsync
  helpviewer_keywords:
  - AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync method [.NET]
  - GetAccessTokenForAppAsync method [.NET], class AppServicesAuthenticationTokenAcquisition
  - AppServicesAuthenticationTokenAcquisition.GetAccessTokenForAppAsync(String, String, String, TokenAcquisitionOptions) method [.NET]
  - GetAccessTokenForAppAsync(String, String, String, TokenAcquisitionOptions) method [.NET], class AppServicesAuthenticationTokenAcquisition
  monikers:
  - msal-model-dotnet-latest
