<Type Name="ICredentialsLoader" FullName="Microsoft.Identity.Abstractions.ICredentialsLoader">
  <TypeSignature Language="C#" Value="public interface ICredentialsLoader" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialsLoader" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Abstractions.ICredentialsLoader" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialsLoader" />
  <TypeSignature Language="F#" Value="type ICredentialsLoader = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Loader of credentials.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CredentialSourceLoaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;Microsoft.Identity.Abstractions.CredentialSource,Microsoft.Identity.Abstractions.ICredentialSourceLoader&gt; CredentialSourceLoaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;valuetype Microsoft.Identity.Abstractions.CredentialSource, class Microsoft.Identity.Abstractions.ICredentialSourceLoader&gt; CredentialSourceLoaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Identity.Abstractions.ICredentialsLoader.CredentialSourceLoaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CredentialSourceLoaders As IDictionary(Of CredentialSource, ICredentialSourceLoader)" />
      <MemberSignature Language="F#" Value="member this.CredentialSourceLoaders : System.Collections.Generic.IDictionary&lt;Microsoft.Identity.Abstractions.CredentialSource, Microsoft.Identity.Abstractions.ICredentialSourceLoader&gt;" Usage="Microsoft.Identity.Abstractions.ICredentialsLoader.CredentialSourceLoaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Microsoft.Identity.Abstractions.CredentialSource,Microsoft.Identity.Abstractions.ICredentialSourceLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Dictionary of credential loaders per credential source. The application can add more to 
            process additional credential sources (like dMSI).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCredentialsIfNeededAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadCredentialsIfNeededAsync (Microsoft.Identity.Abstractions.CredentialDescription credentialDescription, Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters? parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoadCredentialsIfNeededAsync(class Microsoft.Identity.Abstractions.CredentialDescription credentialDescription, class Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Abstractions.ICredentialsLoader.LoadCredentialsIfNeededAsync(Microsoft.Identity.Abstractions.CredentialDescription,Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadCredentialsIfNeededAsync (credentialDescription As CredentialDescription, Optional parameters As CredentialSourceLoaderParameters = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member LoadCredentialsIfNeededAsync : Microsoft.Identity.Abstractions.CredentialDescription * Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters -&gt; System.Threading.Tasks.Task" Usage="iCredentialsLoader.LoadCredentialsIfNeededAsync (credentialDescription, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialDescription" Type="Microsoft.Identity.Abstractions.CredentialDescription" />
        <Parameter Name="parameters" Type="Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters" />
      </Parameters>
      <Docs>
        <param name="credentialDescription">Description of the credentials to load.</param>
        <param name="parameters">Parameters, related to the host application, that the credential source loader can use.</param>
        <summary>
            Load a given credential description, if needed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFirstValidCredentialsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Identity.Abstractions.CredentialDescription?&gt; LoadFirstValidCredentialsAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt; credentialDescriptions, Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters? parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Identity.Abstractions.CredentialDescription&gt; LoadFirstValidCredentialsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Identity.Abstractions.CredentialDescription&gt; credentialDescriptions, class Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Abstractions.ICredentialsLoader.LoadFirstValidCredentialsAsync(System.Collections.Generic.IEnumerable{Microsoft.Identity.Abstractions.CredentialDescription},Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadFirstValidCredentialsAsync (credentialDescriptions As IEnumerable(Of CredentialDescription), Optional parameters As CredentialSourceLoaderParameters = Nothing) As Task(Of CredentialDescription)" />
      <MemberSignature Language="F#" Value="abstract member LoadFirstValidCredentialsAsync : seq&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt; * Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters -&gt; System.Threading.Tasks.Task&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt;" Usage="iCredentialsLoader.LoadFirstValidCredentialsAsync (credentialDescriptions, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialDescriptions" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt;" />
        <Parameter Name="parameters" Type="Microsoft.Identity.Abstractions.CredentialSourceLoaderParameters" />
      </Parameters>
      <Docs>
        <param name="credentialDescriptions">Description of the credentials.</param>
        <param name="parameters">Parameters, related to the host application, that the credential source loader can use.</param>
        <summary>
            Load the first valid credential from the credentials description list.
            </summary>
        <returns>First valid credential description that could be loaded from the credential description list.
            <c>null</c> if none is valid.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCredentials">
      <MemberSignature Language="C#" Value="public void ResetCredentials (System.Collections.Generic.IEnumerable&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt; credentialDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetCredentials(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Identity.Abstractions.CredentialDescription&gt; credentialDescriptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Abstractions.ICredentialsLoader.ResetCredentials(System.Collections.Generic.IEnumerable{Microsoft.Identity.Abstractions.CredentialDescription})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCredentials (credentialDescriptions As IEnumerable(Of CredentialDescription))" />
      <MemberSignature Language="F#" Value="abstract member ResetCredentials : seq&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt; -&gt; unit" Usage="iCredentialsLoader.ResetCredentials credentialDescriptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialDescriptions" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Identity.Abstractions.CredentialDescription&gt;" />
      </Parameters>
      <Docs>
        <param name="credentialDescriptions">Description of the credentials.</param>
        <summary>
            Resets resettable credentials in the credential description list (for instance reset the 
            certificates so that they can be re-loaded again)
            Use, for example, before a retry.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
