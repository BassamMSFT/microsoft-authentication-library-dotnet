<Type Name="IAuthorizationHeaderProvider" FullName="Microsoft.Identity.Abstractions.IAuthorizationHeaderProvider">
  <TypeSignature Language="C#" Value="public interface IAuthorizationHeaderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationHeaderProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Abstractions.IAuthorizationHeaderProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationHeaderProvider" />
  <TypeSignature Language="F#" Value="type IAuthorizationHeaderProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Creates the value of an authorization header that the caller can use to call a protected web API.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateAuthorizationHeaderForAppAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; CreateAuthorizationHeaderForAppAsync (string scopes, Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions? downstreamApiOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; CreateAuthorizationHeaderForAppAsync(string scopes, class Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions downstreamApiOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Abstractions.IAuthorizationHeaderProvider.CreateAuthorizationHeaderForAppAsync(System.String,Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAuthorizationHeaderForAppAsync (scopes As String, Optional downstreamApiOptions As AuthorizationHeaderProviderOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateAuthorizationHeaderForAppAsync : string * Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iAuthorizationHeaderProvider.CreateAuthorizationHeaderForAppAsync (scopes, downstreamApiOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.String" />
        <Parameter Name="downstreamApiOptions" Type="Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopes">Scopes for which to request the authorization header.</param>
        <param name="downstreamApiOptions">Information about the API that will be called (for some
            protocols like Pop), and token acquisition options. Optional. If not provided, the
            authentication header will be for a bearer token.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Creates the authorization header used to call a protected web API on behalf
            of the application itself.
            </summary>
        <returns>A string containing the authorization header, that is protocol and tokens
            (for instance: "Bearer token", "PoP token", etc ...).
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAuthorizationHeaderForUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; CreateAuthorizationHeaderForUserAsync (System.Collections.Generic.IEnumerable&lt;string&gt; scopes, Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions? authorizationHeaderProviderOptions = default, System.Security.Claims.ClaimsPrincipal? claimsPrincipal = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; CreateAuthorizationHeaderForUserAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, class Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions authorizationHeaderProviderOptions, class System.Security.Claims.ClaimsPrincipal claimsPrincipal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Abstractions.IAuthorizationHeaderProvider.CreateAuthorizationHeaderForUserAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions,System.Security.Claims.ClaimsPrincipal,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateAuthorizationHeaderForUserAsync (scopes As IEnumerable(Of String), Optional authorizationHeaderProviderOptions As AuthorizationHeaderProviderOptions = Nothing, Optional claimsPrincipal As ClaimsPrincipal = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateAuthorizationHeaderForUserAsync : seq&lt;string&gt; * Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions * System.Security.Claims.ClaimsPrincipal * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iAuthorizationHeaderProvider.CreateAuthorizationHeaderForUserAsync (scopes, authorizationHeaderProviderOptions, claimsPrincipal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Abstractions</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="authorizationHeaderProviderOptions" Type="Microsoft.Identity.Abstractions.AuthorizationHeaderProviderOptions" />
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopes">Scopes for which to request the authorization header.</param>
        <param name="authorizationHeaderProviderOptions">Information about the API that will be called (for some
            protocols like Pop), and token acquisition options.</param>
        <param name="claimsPrincipal">Inbound authentication elements.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Creates the authorization header used to call a protected web API on behalf
            of a user.
            </summary>
        <returns>A string containing the authorization header, that is protocol and tokens
            (for instance: "Bearer token", "PoP token", etc ...).
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
